#!/usr/bin/env node
var gt=Object.defineProperty;var c=(o,e)=>gt(o,"name",{value:e,configurable:!0});import{StdioServerTransport as ss}from"@modelcontextprotocol/sdk/server/stdio.js";import{Server as Kt}from"@modelcontextprotocol/sdk/server/index.js";import{CallToolRequestSchema as Yt,ListToolsRequestSchema as Xt}from"@modelcontextprotocol/sdk/types.js";import Zt from"ajv";var G="1.0.0",se="QA Agent";import V from"fs";import ft from"os";import re from"path";var J=c(o=>(...e)=>{V.appendFileSync(o,`[${new Date().toISOString()}] ${Array.isArray(e)?e.join(" "):e}
`)},"logToFile"),s=J("/tmp/mcp-evaluator-debug.log");function ie(){switch(ft.platform()){case"darwin":return"macos";case"win32":case"cygwin":return"windows";case"linux":case"android":return"linux";case"aix":case"freebsd":case"openbsd":case"netbsd":case"sunos":case"haiku":default:return"unix"}}c(ie,"getOSName");function be(o){return typeof o=="string"?o:""}c(be,"safeString");function O(o,e){if(!o||typeof o!="string"||!e||typeof e!="string")return!1;try{return o.toLowerCase().includes(e.toLowerCase())}catch{return!1}}c(O,"safeIncludes");function ht(){try{let o=be(process.argv?.[0]),e=be(process.execPath),t=be(process.env._);return{name:o.toLowerCase(),execPath:e.toLowerCase(),argv0:t.toLowerCase()}}catch{return{name:"",execPath:"",argv0:""}}}c(ht,"getProcessInfo");function Fe(){try{let o=process.env||{},e=ht();if(o.VSCODE_PID||o.VSCODE_CWD||o.VSCODE_INJECTION||o.VSCODE_IPC_HOOK||o.VSCODE_IPC_HOOK_CLI)return O(e.name,"cursor")||O(e.execPath,"cursor")||O(e.argv0,"cursor")||o.CURSOR_USER_DATA_DIR||o.CURSOR_LOGS_DIR?"cursor":"vscode";if(o.TERM_PROGRAM&&typeof o.TERM_PROGRAM=="string")try{switch(o.TERM_PROGRAM.toLowerCase()){case"cursor":return"cursor";case"vscode":return"vscode";case"iterm.app":case"apple_terminal":case"hyper":case"wezterm":case"alacritty":return"terminal"}}catch{}if(o.VIMRUNTIME||o.VIM)return"vim";if(o.INSIDE_EMACS)return"emacs";if(["idea","webstorm","pycharm","phpstorm","intellij"].some(i=>O(e.name,i)||O(e.execPath,i)||O(e.argv0,i))||O(e.execPath,"jetbrains"))return"jetbrains";if(O(e.name,"sublime")||O(e.execPath,"sublime")||O(e.argv0,"sublime"))return"sublime";if(o.TERM&&typeof o.TERM=="string"){if(o.SSH_CLIENT||o.SSH_TTY||o.SSH_CONNECTION)return"terminal";try{let i=o.TERM.toLowerCase();if(i.includes("xterm")||i.includes("screen")||i.includes("tmux")||i==="linux"||i==="vt100"||i==="vt102")return"terminal"}catch{}}return"terminal"}catch{return"terminal"}}c(Fe,"getCodingPlatform");var Me=c(async(o,e,t)=>{let r=new Array(o.length),i=new Set,n=!1,a=-1,p=c(async()=>{try{let u=o.map((d,m)=>m).filter(d=>!i.has(d));u.length>0&&await t(u)}catch(u){console.error("onAborted failed: ",u)}},"abortRemaining");return new Promise((u,d)=>{o.forEach((m,g)=>{m.then(async f=>{if(!n){i.add(g),r[g]=f;try{await e(g,f)?i.size===o.length&&u(r):(n=!0,a=g,await p(),u([r[a]]))}catch(h){await p(),d(h)}}}).catch(async f=>{n||(n=!0,i.add(g),await p(),d(f))})})})},"failFast"),Ve=process.env.JEST_WORKER_ID!==void 0||!1,v=c(o=>JSON.stringify({message:o.message,stack:o.stack}),"stringifyError"),oe=c((o,e,t="s")=>o>0&&o<=1?e:`${e}${t}`,"toPlural"),wt=c((o,e)=>{let t=re.join(o,".debug"),r=re.join(t,"screenshots",e);return V.existsSync(t)||V.mkdirSync(t,{recursive:!0}),V.existsSync(r)||V.mkdirSync(r,{recursive:!0}),{debugRoot:t,screenshotsDir:r}},"createDebugFolder"),ze=c((o,e,t,r,i)=>{let{screenshotsDir:n}=wt(o,e),a=re.join(n,t);V.existsSync(a)||V.mkdirSync(a,{recursive:!0});let u=Date.now().toString().slice(-4),d=`step-${r}-${u}.base64`,m=re.join(a,d);try{return V.writeFileSync(m,i,"utf8"),s(`[DEBUG] Screenshot saved: ${m}`),m}catch(g){throw s(`[DEBUG] Failed to save screenshot: ${v(g)}`),g}},"saveScreenshot");import yt from"puppeteer";import*as Qe from"readline";var ve=class{static{c(this,"BrowserRegistry")}browsers=new Map;cleanupInProgress=!1;registryId=0;handlingError=!1;cleanupTimeout=5e3;rlInterface;constructor(e=5e3){this.cleanupTimeout=e,this.setupProcessHandlers()}setupProcessHandlers(){let e=["SIGINT","SIGTERM","SIGQUIT","SIGABRT","SIGHUP"];for(let t of e)process.on(t,()=>{s(`[BrowserRegistry] Received ${t}, cleaning up browsers...`),this.safeCleanupAndExit(0,`${t} signal`)});process.platform==="win32"&&(this.rlInterface=Qe.createInterface({input:process.stdin,output:process.stdout}),this.rlInterface.on("SIGINT",()=>{s("[BrowserRegistry] Received SIGINT (Windows), cleaning up browsers..."),this.safeCleanupAndExit(0,"Windows SIGINT")})),process.on("uncaughtException",t=>{if(this.handlingError){console.error("[BrowserRegistry] Fatal: Error during error handling:",t),process.exit(1);return}this.handlingError=!0,s(`[BrowserRegistry] Uncaught exception: ${v(t)}`),this.safeCleanupAndExit(1,"uncaught exception")}),process.on("unhandledRejection",t=>{if(this.handlingError){console.error("[BrowserRegistry] Fatal: Unhandled rejection during error handling:",t),process.exit(1);return}this.handlingError=!0,s(`[BrowserRegistry] Unhandled promise rejection: ${v(t)}`),this.safeCleanupAndExit(1,"unhandled rejection")}),process.on("beforeExit",t=>{this.browsers.size>0&&!this.cleanupInProgress&&!this.handlingError&&(s(`[BrowserRegistry] beforeExit triggered with code ${t}, ${this.browsers.size} browsers still open`),this.safeCleanupAndExit(t,"beforeExit"))}),process.on("exit",t=>{if(s(`[BrowserRegistry] Process exiting with code ${t}`),this.browsers.size>0){s(`[BrowserRegistry] WARNING: ${this.browsers.size} browsers still registered at exit!`);let r=Array.from(this.browsers.values()).map(i=>`${i.id}: ${i.description}`).join(", ");s(`[BrowserRegistry] Open browsers: ${r}`)}this.rlInterface&&this.rlInterface.close()}),s(`[BrowserRegistry] Process handlers initialized (cleanup timeout: ${this.cleanupTimeout}ms)`)}async safeCleanupAndExit(e,t){if(this.cleanupInProgress){s(`[BrowserRegistry] Cleanup already in progress for ${t}, waiting...`);return}try{await this.cleanup(),s(`[BrowserRegistry] Cleanup complete for ${t}`)}catch(r){s(`[BrowserRegistry] Cleanup failed for ${t}: ${v(r)}`)}finally{process.exit(e)}}register(e,t){let r=`browser-${++this.registryId}`;return this.browsers.set(r,{id:r,browser:e,description:t,registeredAt:Date.now()}),s(`[BrowserRegistry] Registered browser ${r}: ${t} (total: ${this.browsers.size})`),r}unregister(e){let t=this.browsers.get(e);t&&(this.browsers.delete(e),s(`[BrowserRegistry] Unregistered browser ${e}: ${t.description} (total: ${this.browsers.size})`))}getCount(){return this.browsers.size}getRegisteredBrowsers(){let e=Date.now();return Array.from(this.browsers.values()).map(t=>({id:t.id,description:t.description,registeredAt:t.registeredAt,ageMs:e-t.registeredAt}))}async cleanup(){if(this.cleanupInProgress){s("[BrowserRegistry] Cleanup already in progress, skipping...");return}this.cleanupInProgress=!0;let e=this.browsers.size;if(e===0){s("[BrowserRegistry] No browsers to cleanup");return}s(`[BrowserRegistry] Starting cleanup of ${e} browsers...`);let t=Array.from(this.browsers.values()).map(async i=>{let n=Date.now();try{s(`[BrowserRegistry] Closing browser ${i.id}: ${i.description} (age: ${n-i.registeredAt}ms)`),await i.browser.close();let a=Date.now()-n;s(`[BrowserRegistry] Successfully closed browser ${i.id} in ${a}ms`)}catch(a){let p=Date.now()-n;s(`[BrowserRegistry] Error closing browser ${i.id} after ${p}ms: ${v(a)}`)}}),r=new Promise((i,n)=>setTimeout(()=>n(new Error(`Cleanup timeout after ${this.cleanupTimeout}ms`)),this.cleanupTimeout));try{await Promise.race([Promise.allSettled(t),r]),s(`[BrowserRegistry] Normal cleanup complete. All ${e} browsers have been processed.`)}catch{s("[BrowserRegistry] Cleanup timed out, initiating force kill..."),await this.forceKill()}finally{this.browsers.clear(),this.cleanupInProgress=!1}}async forceKill(){s(`[BrowserRegistry] Force killing ${this.browsers.size} browser processes...`);let e=Array.from(this.browsers.values()).map(async t=>{try{let r=t.browser.process();r&&!r.killed?(r.kill("SIGTERM"),await new Promise(i=>setTimeout(i,100)),r.killed?s(`[BrowserRegistry] Browser process ${t.id} terminated with SIGTERM`):(r.kill("SIGKILL"),s(`[BrowserRegistry] Force killed browser process ${t.id} with SIGKILL`))):s(`[BrowserRegistry] Browser process ${t.id} already dead`)}catch(r){s(`[BrowserRegistry] Error force killing browser ${t.id}: ${v(r)}`)}});await Promise.allSettled(e),this.browsers.clear(),s("[BrowserRegistry] Force kill complete")}getDiagnostics(){let e=Date.now();return{browserCount:this.browsers.size,cleanupInProgress:this.cleanupInProgress,handlingError:this.handlingError,browsers:Array.from(this.browsers.values()).map(t=>{let r=!1;try{let i=t.browser.process();r=i?!i.killed:!1}catch{r=!1}return{id:t.id,description:t.description,ageMs:e-t.registeredAt,processAlive:r}})}}},z=new ve(5e3);import He from"datadog-metrics";var W=J("/tmp/mcp-evaluator-profiling.log"),Ee=class{static{c(this,"Profiler")}timers=new Map;datadogEnabled;constructor(){this.datadogEnabled=!!process.env.DATADOG_API_KEY,this.datadogEnabled&&(He.init({apiKey:process.env.DATADOG_API_KEY,prefix:"mcp_evaluator_optimizer.",defaultTags:["service:mcp-evaluator-optimizer","env:production"],onError:c(e=>W(`[PROFILING] DataDog error: ${e}`),"onError")}),W("[PROFILING] DataDog profiler initialized"))}createUniqueKey(e,t){if(!t||!t.uid)throw new Error(`[PROFILING] CRITICAL: UID is required for all profiler operations. Operation: ${e}`);return`${e}-${t.uid}`}start(e,t){let r=this.createUniqueKey(e,t),i=this.formatContext(t);this.timers.set(r,{start:Date.now(),context:t}),W(`[PROFILING] START ${e}${i}`)}end(e,t){let r=this.createUniqueKey(e,t),i=this.timers.get(r);if(!i){W(`[PROFILING] ERROR: No timer found for ${e}`);return}let n=Date.now()-i.start,a={...i.context,...t},p=this.formatContext(a);W(`[PROFILING] END ${e}${p} - Duration: ${n}ms`),this.sendToDataDog(e,n,a),this.timers.delete(r)}formatContext(e){let t=[];return e.runId&&t.push(`runId=${e.runId}`),Object.keys(e).forEach(r=>{["runId"].includes(r)||t.push(`${r}=${e[r]}`)}),t.length>0?` [${t.join(", ")}]`:""}sendToDataDog(e,t,r){if(this.datadogEnabled)try{let i=e.replace(/[^a-zA-Z0-9_]/g,"_"),n=[];He.histogram(i,t,n)}catch(i){W(`[PROFILING] Failed to send DataDog metric: ${i}`)}}},l=new Ee;var ne=class{static{c(this,"PageFreezer")}page;client;freezeTimestamp=0;isPaused=!1;async initialize(e){return this.page=e,this.client=await e.createCDPSession(),await this.client.send("Debugger.enable"),this.client.on("Debugger.paused",()=>{this.isPaused=!0}),this.client.on("Debugger.resumed",()=>{this.isPaused=!1}),this}async freeze(){if(!this.client||!this.page)throw new Error("PageFreezer not initialized");if(!this.freezeTimestamp){this.freezeTimestamp=Date.now();let e=new Promise(t=>{if(this.isPaused){t();return}let r=c(()=>{this.client.off("Debugger.paused",r),t()},"listener");this.client.on("Debugger.paused",r)});this.client.send("Runtime.evaluate",{expression:`
                    (function() {
                        window.__freezeLoopActive = true;
                        while (window.__freezeLoopActive) {
                            // This loop will run until Debugger.pause stops it
                        }
                    })();
                `,awaitPromise:!1,userGesture:!0}).catch(()=>{}),await new Promise(t=>setTimeout(t,10)),await this.client.send("Debugger.pause"),await e,await this.client.send("Runtime.evaluate",{expression:"delete window.__freezeLoopActive;",awaitPromise:!1}).catch(()=>{}),await this.client.send("Animation.enable"),await this.client.send("Animation.setPlaybackRate",{playbackRate:0})}return this}async unfreeze(){if(!this.client)throw new Error("PageFreezer not initialized");if(this.freezeTimestamp){await this.client.send("Runtime.evaluate",{expression:"window.__freezeLoopActive = false;",awaitPromise:!1}).catch(()=>{});do try{await this.client.send("Debugger.resume"),await new Promise(e=>setTimeout(e,100))}catch(e){s(v(e))}while(this.isPaused);await this.client.send("Animation.setPlaybackRate",{playbackRate:1}),this.freezeTimestamp=0}return this}async cleanup(){this.client&&(await this.unfreeze(),await this.client.send("Debugger.disable"),await this.client.send("Animation.disable"),this.client=void 0,this.page=void 0)}};var $e=!0,ae=class{static{c(this,"BrowserController")}session;webappUrl;headless;customViewport;browser;page;registryId;freezer;devicePixelRatio;constructor(e,t,r=!0,i){if(this.session=e,!t)throw new Error(`Invalid Webapp URL: "${t}"`);this.webappUrl=t,this.headless=r,this.customViewport=i}async launchBrowser(){if(s(`[BrowserController] Launching  Puppeteer browser for session ${this.session.session_uid}`),this.browser)throw new Error("Browser already launched");let e=this.session.session_uid,t=this.session.test_id;l.start("browser-launch",{uid:e,testId:t});let r;this.customViewport?(r={width:this.customViewport.width,height:this.customViewport.height,deviceScaleFactor:1},s(`[BrowserController] Using custom viewport: ${this.customViewport.width}x${this.customViewport.height}`)):(r=null,s("[BrowserController] Using system natural viewport")),this.browser=await yt.launch({headless:this.headless,defaultViewport:r,args:["--disable-extensions","--disable-plugins","--disable-dev-shm-usage","--disable-gpu","--no-first-run","--disable-default-apps","--disable-background-timer-throttling","--disable-backgrounding-occluded-windows","--disable-renderer-backgrounding","--disable-blink-features=AutomationControlled","--disable-features=TranslateUI","--disable-ipc-flooding-protection","--disable-background-networking","--disable-hang-monitor","--disable-prompt-on-repost","--memory-pressure-off"]}),l.end("browser-launch",{uid:e,testId:t,result:"success"}),this.registryId=z.register(this.browser,`BrowserController-${this.session.session_uid}`),l.start("browser-new-page",{uid:e,testId:t}),this.page=await this.browser.newPage(),l.end("browser-new-page",{uid:e,testId:t,result:"success"}),this.#t(),this.freezer=$e?await new ne().initialize(this.page):void 0,await this.navigateToWebapp(),await this.injectControllerScript(this.session.controller_script),s(`[BrowserController] Browser launched and controller script injected for session ${this.session.session_uid}`)}#e(){if(!this.page)throw new Error("Browser page not initialized")}#t(){if(!this.page){s("[BrowserController] Cannot setup console logging - page not initialized");return}let e=J("/tmp/mcp-evaluator-debug.log"),t=this.session.session_uid;this.page.on("console",async r=>{try{let i=r.type(),n=r.location(),a=r.text(),p=await Promise.all(r.args().map(async g=>{try{return await g.jsonValue()}catch{try{return await g.toString()}catch{return"[complex object]"}}})),u=`[BROWSER-${t}] ${i.toUpperCase()}: ${a}`,d=p.length>0?`[BROWSER-${t}] ARGS: ${JSON.stringify(p)}`:null,m=n.url?`[BROWSER-${t}] LOCATION: ${n.url}:${n.lineNumber}:${n.columnNumber}`:null;e(u),d&&e(d),m&&e(m)}catch(i){s(`[BrowserController] Failed to log browser console message: ${i}`)}}),this.page.on("pageerror",r=>{e(`[BROWSER-${t}] PAGE-ERROR: ${r.message}`),e(`[BROWSER-${t}] STACK: ${r.stack}`)}),this.page.on("requestfailed",r=>{e(`[BROWSER-${t}] REQUEST-FAILED: ${r.method()} ${r.url()}`),e(`[BROWSER-${t}] FAILURE: ${r.failure()?.errorText}`)}),s(`[BrowserController] Browser console logging enabled for session ${t}`)}async navigateToWebapp(){this.#e(),s(`[BrowserController] ${this.session.session_uid} navigating to webapp "${this.webappUrl}" `),l.start("browser-navigate-to-webapp",{uid:this.session.session_uid});try{await this.page.goto(this.webappUrl,{waitUntil:"domcontentloaded",timeout:6e4}),l.end("browser-navigate-to-webapp",{uid:this.session.session_uid})}catch(e){if(l.end("browser-navigate-to-webapp",{uid:this.session.session_uid,result:"error",error:e.message}),s(`[BrowserController] Navigation failed for ${this.webappUrl}: ${e.message}`),this.webappUrl.startsWith("file://")){s("[BrowserController] Retrying file URL navigation with networkidle0");try{await this.page.goto(this.webappUrl,{waitUntil:"networkidle0",timeout:9e4}),s("[BrowserController] File URL navigation succeeded on retry")}catch(t){throw s(`[BrowserController] File URL retry also failed: ${t.message}`),t}}else throw e}}async injectControllerScript(e){this.#e(),l.start("browser-inject-controller-script",{uid:this.session.session_uid}),await this.page.evaluateOnNewDocument(e),await this.page.evaluate(e),await this.page.evaluate(()=>typeof window.__puppeteerResize=="function")||await this.page.exposeFunction("__puppeteerResize",async i=>{await this.page.setViewport(i),await this.page.evaluate(n=>{window.__puppeteerBridge.dispatchEvent(new CustomEvent("viewport-changed",{detail:n}))},i)}),await this.page.evaluate(()=>typeof window.__puppeteerHover=="function")||await this.page.exposeFunction("__puppeteerHover",async(i,n)=>{try{return s(`[BrowserController] Bridge hover request: ${i} ${n?`at (${n.x}, ${n.y})`:""}`),n?(await this.page.mouse.move(n.x,n.y),await this.page.mouse.move(n.x,n.y)):await this.page.hover(i),await this.page.evaluate(a=>{window.__puppeteerBridge.dispatchEvent(new CustomEvent("hover-completed",{detail:{success:!0,selector:a.selector,coordinates:a.coordinates,timestamp:Date.now()}}))},{selector:i,coordinates:n}),!0}catch(a){let p=a instanceof Error?a.message:String(a);return s(`[BrowserController] Bridge hover failed: ${p}`),await this.page.evaluate(u=>{window.__puppeteerBridge.dispatchEvent(new CustomEvent("hover-failed",{detail:{success:!1,selector:u.selector,error:u.error,timestamp:Date.now()}}))},{selector:i,error:p}),!1}}),l.end("browser-inject-controller-script",{uid:this.session.session_uid})}async executeScript(e){this.#e(),l.start("browser-execute-script",{uid:this.session.session_uid});try{let t,r=new Promise((i,n)=>{t=setTimeout(()=>{n(new Error("Script execution timed out after 10 seconds"))},1e4)});try{await Promise.race([this.page.evaluate(e),r])}finally{clearTimeout(t)}l.end("browser-execute-script",{uid:this.session.session_uid})}catch(t){throw l.end("browser-execute-script",{uid:this.session.session_uid,result:t.message}),s(`[BrowserController ${this.session.session_uid}] script execution failed: ${t}`),t}}async focusElement(e){this.#e();let t=`[data-qa-id="${e}"]`;try{l.start("browser-focus-element",{uid:this.session.session_uid,elementId:e}),s(`[BrowserController ${this.session.session_uid}] focusing on element: ${t}`),await this.page.focus(t),l.end("browser-focus-element",{uid:this.session.session_uid,elementId:e,result:"success"}),s(`[BrowserController ${this.session.session_uid}] successfully focused on element: ${t}`)}catch(r){throw l.end("browser-focus-element",{uid:this.session.session_uid,elementId:e,result:r.message}),s(`[BrowserController ${this.session.session_uid}] failed to focus on element ${t}: ${r}`),new Error(`Failed to focus on element with selector "${t}": ${r}`)}}async clickElement(e){this.#e();let t=`[data-qa-id="${e}"]`;try{l.start("browser-click-element",{uid:this.session.session_uid,elementId:e}),s(`[BrowserController ${this.session.session_uid}] clicking on element: ${t}`),await this.page.click(t),l.end("browser-click-element",{uid:this.session.session_uid,elementId:e,result:"success"}),s(`[BrowserController ${this.session.session_uid}] successfully clicked on element: ${t}`)}catch(r){throw l.end("browser-click-element",{uid:this.session.session_uid,elementId:e,result:r.message}),s(`[BrowserController ${this.session.session_uid}] failed to click on element ${t}: ${r}`),new Error(`Failed to click on element with selector "${t}": ${r}`)}}async pressKey(e){this.#e();try{l.start("browser-press-key",{uid:this.session.session_uid,keyCode:e}),s(`[BrowserController] ${this.session.session_uid} pressing key with keyCode: ${e}`);let t;switch(e){case 8:t="Backspace";break;case 9:t="Tab";break;case 13:t="Enter";break;case 27:t="Escape";break;case 32:t="Space";break;case 37:t="ArrowLeft";break;case 38:t="ArrowUp";break;case 39:t="ArrowRight";break;case 40:t="ArrowDown";break;case 46:t="Delete";break;default:if(e>=32&&e<=126)t=String.fromCharCode(e);else throw new Error(`Unsupported keyCode: ${e}`)}await this.page.keyboard.press(t),l.end("browser-press-key",{uid:this.session.session_uid,keyCode:e,result:"success"}),s(`[BrowserController] ${this.session.session_uid} successfully pressed key: ${t} (keyCode: ${e})`)}catch(t){throw l.end("browser-press-key",{uid:this.session.session_uid,keyCode:e,result:t.message}),s(`[BrowserController] ${this.session.session_uid} failed to press key ${e}: ${t}`),new Error(`Failed to press key with keyCode "${e}": ${t}`)}}async takeScreenshot(e){this.#e(),l.start("browser-take-screenshot",{uid:this.session.session_uid});let t=await this.page.createCDPSession(),r=await this.getDevicePixelRatio(),{data:i}=await t.send("Page.captureScreenshot",{format:"png",...e?{clip:{x:e.x0,y:e.y0,width:e.x1-e.x0,height:e.y1-e.y0,scale:r}}:{captureBeyondViewport:!0}});return l.end("browser-take-screenshot",{uid:this.session.session_uid}),i}async extractDOM(){this.#e(),l.start("browser-extract-dom",{uid:this.session.session_uid});let e=await this.page.evaluate(async()=>{try{let t=await window.scrapeDOM();return console.log("[BrowserController] [dom.callback] returning to Node"),t}catch(t){return console.error(`[BrowserController] [dom.callback error]
`,t),{error:t}}});return l.end("browser-extract-dom",{uid:this.session.session_uid,result:e.error?e.error.message:"success"}),e}async getViewportBounds(){this.#e(),l.start("browser-get-viewport-bounds",{uid:this.session.session_uid});let e=await this.page.evaluate(()=>{let i=window.scrollX,n=window.scrollY;return{x0:i,y0:n,x1:i+window.innerWidth,y1:n+window.innerHeight}}),t=e.x1-e.x0,r=e.y1-e.y0;return s(`[BrowserController] Viewport bounds for ${this.session.session_uid}: ${t}x${r} (x0:${e.x0}, y0:${e.y0}, x1:${e.x1}, y1:${e.y1})`),l.end("browser-get-viewport-bounds",{uid:this.session.session_uid}),e}async getDevicePixelRatio(){if(this.#e(),this.devicePixelRatio)return this.devicePixelRatio;l.start("browser-get-device-pixel-ratio",{uid:this.session.session_uid});let e=await this.page.evaluate(()=>window.devicePixelRatio||1);return l.end("browser-get-device-pixel-ratio",{uid:this.session.session_uid}),this.devicePixelRatio=e,e}async getPage(){return this.#e(),this.page}async resetPageState(){this.#e(),s(`[BrowserController] resetPageState ${this.session.session_uid}`),await this.clearPageState(),await this.navigateToWebapp(),s(`[BrowserController] Re-injecting controller script after reset ${this.session.session_uid}`),this.session.controller_script&&await this.injectControllerScript(this.session.controller_script)}async freezePage(){if($e){if(!this.freezer)throw new Error("Page freezer not initialized");s(`[BrowserController] Freezing page for session ${this.session.session_uid}`),await this.freezer.freeze()}}async unfreezePage(){if($e){if(!this.freezer)throw new Error("Page freezer not initialized");s(`[BrowserController] Unfreezing page for session ${this.session.session_uid}`),await this.freezer.unfreeze()}}async clearPageState(){this.#e();try{l.start("browser-clear-page-state",{uid:this.session.session_uid}),s(`=== [BrowserController] clearPageState ${this.session.session_uid} ===`),await this.page.evaluate(()=>{typeof localStorage<"u"&&localStorage.clear()}),await this.page.evaluate(()=>{typeof sessionStorage<"u"&&sessionStorage.clear()});let e=await this.page.createCDPSession();await e.send("Network.clearBrowserCache"),await e.send("Network.clearBrowserCookies"),await this.page.evaluate(()=>{for(let t=1;t<1e4;t++)clearTimeout(t),clearInterval(t)}),l.end("browser-clear-page-state",{uid:this.session.session_uid,result:"success"})}catch(e){l.end("browser-clear-page-state",{uid:this.session.session_uid,result:e.message}),s(`[BrowserController] clearPageState error ${this.session.session_uid}: ${e}`)}}async cleanup(){s(`=== [BrowserController] cleanup ${this.session.session_uid} ===`);try{this.freezer&&(await this.freezer.cleanup(),this.freezer=void 0),this.browser&&(l.start("browser-cleanup",{uid:this.session.session_uid}),await this.browser.close(),this.browser=void 0,this.page=void 0,l.end("browser-cleanup",{uid:this.session.session_uid,result:"success"}))}catch(e){l.end("browser-cleanup",{uid:this.session.session_uid,result:e.message}),s(`[BrowserController] cleanup error ${this.session.session_uid}: ${e}`)}finally{this.registryId&&(z.unregister(this.registryId),this.registryId=void 0)}}};var b=class o extends Error{static{c(this,"CritiqueError")}#e;constructor(e){super(e.feedbacks?.[0]?.text||"Critique error"),this.name="CritiqueError",this.#e={...e,decision:"CRITIQUE",metadata:{...e.metadata,evaluationTime:Date.now(),evaluatorVersion:G}}}toEvaluationResult(){return this.#e}static fromError(e,t){if(e instanceof o)return e;let r=String(e?.message||e||"Unknown Error");return new o({confidence:.1,feedbacks:[{text:`Error: ${r}`,structured:{violation:`EXECUTION_ERROR: ${r}`,testId:t,severity:"BLOCKING"}}]})}},K=c((o,e)=>{throw o instanceof b?o:e},"bubbleCritiqueErrorOrThrow"),Se=c(o=>o instanceof Error&&(o.name==="AbortError"||o.message.includes("timeout")),"isTimeoutError");var Te=class{static{c(this,"ProgressTracker")}state={progressToken:void 0,server:void 0,totalTests:0,completedTests:0};initialize(e){this.state.progressToken=e.progressToken,this.state.server=e.server,s(`[Progress] Initialized with token: ${e.progressToken}`)}setTotalTests(e){this.state.totalTests=e,s(`[Progress] Updated totalTests to: ${e}`)}notify(e,t,r){if(!this.state.progressToken||!this.state.server){s("[Progress] No token or server available, skipping notification");return}let i={progressToken:this.state.progressToken,progress:e,total:t,...r&&{message:r}};s(`[Progress] Notifying: ${e}/${t} - ${r||"no message"}`),this.state.server.notification({method:"notifications/progress",params:i}).catch(n=>{s(`[Progress] Failed to send notification: ${n}`)})}toolCalled(){this.notify(1,100,"Tool called")}toolValidated(){this.notify(2,100,"Tool validation completed")}evaluateStarted(){this.notify(3,100,"Evaluation started")}asyncPrepInitiated(){this.notify(4,100,"Async preparation initiated")}updateAsyncPreparationProgress(e,t){let r=Math.round(5+e/100*15),i=t||`Execution progress: ${e}%`;s(`[Progress] Execution progress ${e}% \u2192 ${r}%`),this.notify(r,100,i)}testsExecutionStarted(){this.notify(20,100,"Test execution started")}incrementCompletedTests(e){if(!this.state.totalTests){s("[Progress] Cannot increment completed tests - totalTests not set");return}this.state.completedTests++;let t=this.state.completedTests/this.state.totalTests,r=Math.round(Math.min(20+t*79,99));s(`[Progress] Test ${this.state.completedTests}/${this.state.totalTests} completed \u2192 ${r}% (testsProgress: ${t.toFixed(3)})`);let i=e||`Test ${this.state.completedTests}/${this.state.totalTests} completed`;this.notify(r,100,i)}complete(){this.notify(100,100,"Evaluation completed"),this.cleanup()}fail(e){this.notify(99,100,`Evaluation failed: ${e||"unknown error"}`)}completeAfterFailure(){this.notify(100,100,"Failed evaluation result returned"),this.cleanup()}cleanup(){this.state={progressToken:void 0,server:void 0,totalTests:0,completedTests:0}}},R=new Te;var Ge=3e4,bt=2e3,vt=3,Q=class o{static{c(this,"ApiClient")}#e;#t;static apiCalls={initialize:0,async_prep:0,execution_state:0,step:0};constructor(e,t){this.#e=e,this.#t=t}get baseUrl(){return this.#e}async#s(e,t,r){let{timeoutMs:i=Ge,context:n}=r,a=this.#t??t.signal;if(i){let d=AbortSignal.timeout(i);a=a?AbortSignal.any([a,d]):d}let p=await fetch(e,{...t,signal:a});if(this.#t?.aborted)throw new Error(`API call aborted: ${n}`);if(!p.ok)throw new Error(`${n} failed: ${p.status}`);let u=await p.json();if(!u)throw new Error(`API call failed, json() returned undefined: ${n}`);return u}async#r(e,t,r){let{maxRetries:i=vt,baseDelay:n=bt,timeoutMs:a=Ge,context:p}=r,u,d=0;for(let m=0;m<=i;m++)try{return await this.#s(e,t,{timeoutMs:a,context:p})}catch(g){if(u=g,Se(g)&&(d++,this.#t?.aborted))throw g;let f=g.message?.match(/failed: (\d+)/i);if(f){let y=parseInt(f[1]);if(![408,429,500,502,503,504].includes(y))throw g}if(m===i)throw s(`[ApiClient] ${p} failed after ${i+1} attempts. Last error: ${u.message}`),d===i+1?new Error(`Server not responding. Request timed out after ${a/1e3} seconds and was retried ${i} times. Test aborted. `):u;let h=n*Math.pow(2,m);s(`[ApiClient] ${p} attempt ${m+1} failed: ${u.message}. Retrying in ${h}ms...`),await new Promise(y=>setTimeout(y,h))}throw u}async asyncPrep(e){let t=`api-async-prep-${++o.apiCalls.async_prep}-${Date.now()}`;l.start("api-async-prep",{uid:t});let r=await this.#s(`${this.baseUrl}/mgr/api/v1/test-plans/async_prep`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)},{context:"Async QA sessions preparation",timeoutMs:6e4});return l.end("api-async-prep",{uid:t,runId:r.execution_id}),r}async getExecutionState(e){let t=`api-get-execution-state-${++o.apiCalls.execution_state}-${Date.now()}`,r=`${this.baseUrl}/mgr/api/v1/executions/${e}/state`;s(`[ApiClient.getExecutionState] ${t} - Fetching state for runId: ${e}`),s(`[ApiClient.getExecutionState] ${t} - Request URL: ${r}`),l.start("api-get-execution-state",{uid:t,runId:e});let i=await this.#s(r,{method:"GET",headers:{"Content-Type":"application/json"}},{context:"Get execution state",timeoutMs:5e3});return s(`[ApiClient.getExecutionState] ${t} - Full /state response:`),s(`[ApiClient.getExecutionState] ${t} - Response status: ${i.status}`),s(`[ApiClient.getExecutionState] ${t} - Full response body: ${JSON.stringify(i,null,2)}`),l.end("api-get-execution-state",{uid:t,runId:e,status:i.status}),i}async asyncPrepWithStatePolling(e){let t=`api-async-prep-with-polling-${Date.now()}`;l.start("api-async-prep-with-polling",{uid:t});let{execution_id:r}=await this.asyncPrep(e);s(`[ApiClient] Started async prep with runId: ${r}`),R.asyncPrepInitiated();let i=Date.now(),n=10*60*1e3,a=3e3;for(;;){if(Date.now()-i>=n)throw new Error(`Preparing timeout: Test plan preparation exceeded ${n/(60*1e3)} minutes `);try{let u=await this.getExecutionState(r);switch(s(`[ApiClient] Poll ${r}: ${u.status} - ${u.message} (${u.progress_percentage}%)`),R.updateAsyncPreparationProgress(u.progress_percentage,`${u.message} (created ${u.completed_sessions} sessions)`),u.status){case"running":case"completed":{if(!u.sessions)throw s(`[ApiClient] ERROR: Status '${u.status}' but no sessions in state response`),new Error(`'${u.status}' but no sessions`);return s(`[ApiClient] Sessions data received: ${u.sessions.length} sessions`),s(`[ApiClient] Full sessions data: ${JSON.stringify(u.sessions,null,2)}`),{sessions:u.sessions,runId:r}}case"failed":throw new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: Failed to prepare test plan - ${u.message}. The .vibe/test_plan content appears to be invalid or insufficient.`,structured:{violation:"QA_PLAN_PREPARATION_FAILED",testId:"N/A",severity:"BLOCKING",penalty:"$2000"},suggestions:[{type:"action",content:`Review and fix the .vibe/test_plan file content. Error: ${u.message}`,severity:"BLOCKING"}]}]});case"preparing":break;default:throw new Error(`Unknown execution status: ${u.status}`)}}catch(u){if(u instanceof b)throw u;Se(u)?s(`[ApiClient] Poll timeout for ${r}, retrying...`):s(`[ApiClient] Poll error for ${r}: ${v(u)}
retrying...`)}finally{l.end("api-async-prep-with-polling",{uid:t,runId:r})}await new Promise(u=>setTimeout(u,a))}}async step(e,t){let r=`api-step-${++o.apiCalls.step}-${Date.now()}`;l.start("api-step",{uid:r,sessionId:e});let i=await this.#r(`${this.baseUrl}/${e}/step`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)},{context:`[${e}] QA step`});return l.end("api-step",{uid:r,sessionId:e,action:i.action}),i}async abort(e){await this.#s(`${this.baseUrl}/${e}/abort`,{method:"POST",headers:{"Content-Type":"application/json"}},{context:`[${e}] Session abort`})}async initializeTool(e){let t=`api-init-tool-${++o.apiCalls.initialize}-${Date.now()}`;l.start("api-init-tool",{uid:t});let r=await this.#s(`${this.baseUrl}/init_tool`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)},{context:"Tool initialization"});return l.end("api-init-tool",{uid:t,result:"success"}),r}};var le=class{static{c(this,"EvaluatorTool")}tool=null;initPromise=null;async get(e){return this.tool?this.tool:this.initPromise?this.initPromise:(s("=== [EvaluatorTool] Fetching tool info ==="),this.initPromise=this.#e(e),this.initPromise)}async#e(e){try{let t=await new Q(e).initializeTool({os:ie(),coding_platform:Fe(),coding_agent:"claude-4-sonnet"}),r={name:t.name,description:t.description,inputSchema:JSON.parse(t.schema)};return this.tool=r,s("=== [EvaluatorTool] Tool info fetched successfully ==="),s(`Tool name: ${r.name}`),s(`Tool description: ${r.description}`),s(`Tool inputSchema: ${JSON.stringify(r.inputSchema,void 0,2)}`),r}catch(t){throw s("[EvaluatorTool] Error fetching tool definition:"),s(v(t)),this.initPromise=null,t}}};import{spawn as Et}from"child_process";var We=c(o=>{let e=[/url:\s*(https?:\/\/[^\s]+)/i,/Local:\s*(https?:\/\/[^\s]+)/i,/Local:\s*(https?:\/\/localhost:\d+)/i,/(?:server.*?(?:running|started).*?(?:on|at)|listening.*?(?:on|at)).*?(https?:\/\/[^\s]+)/i,/(https?:\/\/localhost:\d+)/i,/(?:port|listening.*?on).*?(\d+)/i];for(let t of e){let r=o.match(t);if(r){let i=r[1];if(/^\d+$/.test(i)&&(i=`http://localhost:${i}`),i.startsWith("http://")||i.startsWith("https://"))return i}}return null},"extractUrlFromOutput");var Y=class{static{c(this,"WebappController")}#e;startWebapp=c(async(e,t)=>{let r=`webapp-start-${Date.now()}`;return l.start("webapp-start",{uid:r,command:t}),new Promise((i,n)=>{s(`[WebappController] Starting webapp with command "${t}" in ${e}`);try{let a,p;if(t.startsWith("node -e")){let h=t.match(/^node -e\s+(.+)$/);if(h){let y=h[1],$=y.startsWith('"')&&y.endsWith('"')?y.slice(1,-1):y;a="node",p=["-e",$]}else throw l.end("webapp-start",{uid:r,result:"error",error:"Invalid node -e command"}),new Error(`Invalid node -e command: ${t}`)}else[a,...p]=t.split(" ");l.start("webapp-process-spawn",{uid:r,command:a});let u=Et(a,p,{cwd:e,stdio:["pipe","pipe","pipe"]});l.end("webapp-process-spawn",{uid:r,command:a,result:"success",pid:u.pid});let d=null,m={};l.start("webapp-url-detection",{uid:r});let g=c((h,y={})=>{m.current&&(clearTimeout(m.current),m.current=null);let $=typeof h=="string"?h:h.message,I=typeof h=="string"?new Error(h):h;l.end("webapp-url-detection",{uid:r,result:"error",...y}),l.end("webapp-start",{uid:r,result:"error",error:$,...y}),n(I)},"handleError"),f=c(h=>{let y=We(h);y&&!d&&(d=y,s(`[WebappController] Detected webapp URL "${y}"`),this.#e={process:u,url:y},m.current&&(clearTimeout(m.current),m.current=null),l.end("webapp-url-detection",{uid:r,result:"success",detectedUrl:y}),l.end("webapp-start",{uid:r,result:"success",url:y}),i(this.#e))},"detectUrl");u.stdout?.on("data",h=>{let y=h.toString();s(`[WebappController] stdout: ${y}`),f(y)}),u.stderr?.on("data",h=>{let y=h.toString();s(`[WebappController] stderr: ${y}`),f(y)}),u.on("error",h=>{s("[WebappController] Error starting webapp process"),s(v(h)),g(h,{source:"process-error"})}),u.on("close",(h,y)=>{s(`Webapp process closed with code ${h} and signal ${y}`),h!==0&&!d&&g(`Webapp process exited with code ${h}`,{exitCode:h,signal:y})}),m.current=setTimeout(()=>{d||(m.current=null,g("Timeout: No webapp URL detected within 30 seconds",{source:"timeout"}))},3e4)}catch(a){l.end("webapp-start",{uid:r,result:"error",error:a.message}),n(a)}})},"startWebapp");stopWebapp=c(()=>new Promise(e=>{if(this.#e&&!this.#e.process.killed){let t=`webapp-stop-${Date.now()}`;l.start("webapp-stop",{uid:t}),s("[WebappController] Stopping webapp process");let r=this.#e.process,i=!1,n=c(()=>{i||(i=!0,l.end("webapp-stop",{uid:t,result:"success",pid:r.pid}),this.#e=void 0,global.gc&&global.gc(),e())},"cleanup");r.once("exit",n),r.kill("SIGTERM"),setTimeout(()=>{!r.killed&&!i&&(s("[WebappController] Process didn't exit gracefully, sending SIGKILL"),r.kill("SIGKILL"))},1e3),setTimeout(()=>{i||(s("[WebappController] Force resolving after timeout"),n())},3e3)}else this.#e=void 0,e()}),"stopWebapp");get webapp(){return this.#e}};import je from"fs";var ce=c(async o=>{let e=`webapp-validation-${Date.now()}`;if(o.startsWith("file:///")){l.start("webapp-file-validation",{uid:e,url:o});let t=o.replace("file://",""),{access:r}=je.promises;await r(t,je.constants.F_OK),l.end("webapp-file-validation",{uid:e,result:"success",filePath:t}),s(`[validateWebappUrl] Confirmed file exists at ${o}`)}else{l.start("webapp-http-validation",{uid:e,url:o});let t=new AbortController,r=setTimeout(()=>t.abort(),2e3),i=await fetch(o,{method:"HEAD",signal:t.signal});if(clearTimeout(r),!i.ok){let n=new Error(`Server responded with status ${i.status}`);throw l.end("webapp-http-validation",{uid:e,result:"error",httpStatus:i.status,error:n.message}),n}s(`[validateWebappUrl] Confirmed server is running at ${o}`),l.end("webapp-http-validation",{uid:e,result:"success",httpStatus:i.status})}},"validateWebappUrl");import Ke from"path";import X from"fs";import{randomUUID as Rt}from"node:crypto";import{cpus as Pt,freemem as Ct,totalmem as _t}from"node:os";import{execSync as Dt}from"node:child_process";import Tt from"path";import At from"fs";import{parse as $t}from"csv-parse";var ue=c(async o=>new Promise(e=>{let t=0,r=!1,i=$t({delimiter:"|",skip_empty_lines:!0,trim:!0});i.on("readable",function(){let n;for(;n=i.read();)t++,!(typeof n[0]=="string"&&n[0].startsWith("#"))&&n.length>3&&(r=!0)}),i.on("error",function(n){e({isValid:!1,error:n.message})}),i.on("end",function(){e({isValid:t>0&&r,error:r?void 0:"CSV must have rows with more than 3 columns"})}),i.write(o),i.end()}),"validateCSVFormat");import{parse as St}from"csv-parse";var Ae=c(async(o,e,t)=>(s("[filterTestPlanCSV] Starting CSV filtering..."),s(`[filterTestPlanCSV] testIndex: ${e}, testId: ${t}`),s(`[filterTestPlanCSV] CSV content length: ${o.length}`),new Promise((r,i)=>{let n=[],a,p=0,u=0,d=!1,m;s("[filterTestPlanCSV] Initializing CSV parser...");let g=St({delimiter:"|",skip_empty_lines:!0,trim:!0});g.on("readable",function(){let f;for(;f=g.read();){if(s(`[filterTestPlanCSV] Parsing row: ${JSON.stringify(f)}`),typeof f[0]=="string"&&f[0].startsWith("#")){s(`[filterTestPlanCSV] Found header row: ${JSON.stringify(f)}`),a=f;continue}if(p++,u++,s(`[filterTestPlanCSV] Processing data row ${p}: ${JSON.stringify(f)}`),e&&p===e)s(`[filterTestPlanCSV] Found target row by index ${e}: ${JSON.stringify(f)}`),m=f,d=!0;else if(t&&f.length>0){let h=f[0]?.trim();s(`[filterTestPlanCSV] Checking testId: "${h}" vs target "${t}"`),h===t&&(s(`[filterTestPlanCSV] Found target row by testId "${t}": ${JSON.stringify(f)}`),m=f,d=!0)}}}),g.on("error",function(f){s(`[filterTestPlanCSV] Error parsing CSV: ${f.message}`),i(f)}),g.on("end",function(){if(s("[filterTestPlanCSV] ========== CSV parser 'end' event triggered =========="),s(`[filterTestPlanCSV] foundTest: ${d}`),s(`[filterTestPlanCSV] targetRow exists: ${!!m}`),s(`[filterTestPlanCSV] headerRow exists: ${!!a}`),!d||!m){e?s(`[filterTestPlanCSV] Test index ${e} not found in ${u} total tests`):t&&s(`[filterTestPlanCSV] Test ID "${t}" not found in ${u} total tests`),s("[filterTestPlanCSV] Returning failure result with original CSV"),r({filteredCSV:o,found:!1,originalTestCount:u,filteredTestCount:0});return}let f=[];a&&(f.push(a.join("|")),s(`[filterTestPlanCSV] Added header row: ${a.join("|")}`)),m&&(f.push(m.join("|")),s(`[filterTestPlanCSV] Added target row: ${m.join("|")}`));let h=f.join(`
`);e?s(`[filterTestPlanCSV] \u2705 Successfully filtered CSV to test index ${e}`):t&&s(`[filterTestPlanCSV] \u2705 Successfully filtered CSV to test ID "${t}"`),s(`[filterTestPlanCSV] Filtered CSV content (length: ${h.length}):
${h}`),s("[filterTestPlanCSV] ========== Resolving promise with success result =========="),r({filteredCSV:h,found:!0,originalTestCount:u,filteredTestCount:1})}),s(`[filterTestPlanCSV] Writing CSV content to parser (${o.length} characters)...`),g.write(o),s("[filterTestPlanCSV] Calling parser.end()..."),g.end()})),"filterTestPlanCSV");var Ie=c(o=>{let e=Tt.join(o,".vibe","test_plan");return At.readFileSync(e,"utf8")},"readTestPlanRaw"),qe=c(async o=>{try{let e=Ie(o);if(!(await ue(e)).isValid)return s("[assertTestPlanFile] Returning CRITIQUE - Invalid or empty test plan file"),new b({confidence:1,feedbacks:[{text:"UNACCEPTABLE: Empty or invalid test plan in .vibe/test_plan file. FORBIDDEN to continue without a detailed test plan for the entire project.",structured:{violation:"MANDATORY_QA_PLAN",testId:"N/A",severity:"BLOCKING",penalty:"$2000"},suggestions:[{type:"action",content:"RULE 1: Create comprehensive QA test plan in CSV format in .vibe/test_plan file covering the entire project. NO SHORTCUTS.",severity:"BLOCKING"}]}]});s("[assertTestPlanFile] Test plan file validated successfully");return}catch(e){let t=e.message.toLowerCase();return t.includes("enoent")||t.includes("no such file")?(s("[assertTestPlanFile] Returning CRITIQUE - Missing .vibe/test_plan file"),new b({confidence:1,feedbacks:[{text:"UNACCEPTABLE: Missing .vibe/test_plan file. FORBIDDEN to continue without a detailed test plan for the entire project.",structured:{violation:"MANDATORY_QA_PLAN",testId:"N/A",severity:"BLOCKING",penalty:"$2000"},suggestions:[{type:"action",content:"RULE 1: Create comprehensive QA test plan in .vibe/test_plan file covering the entire project. Step-by-step instructions. NO SHORTCUTS.",severity:"BLOCKING"}]}]})):(s("[assertTestPlanFile] Returning CRITIQUE - Error reading .vibe/test_plan file"),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: Error reading .vibe/test_plan file: ${t}! FORBIDDEN to continue without accessible test plan.`,structured:{violation:"QA_PLAN_ACCESS_ERROR",testId:"N/A",severity:"BLOCKING",penalty:"$2000"},suggestions:[{type:"action",content:`Ensure .vibe/test_plan file exists and is readable. Error: ${t}`,severity:"BLOCKING"}]}]}))}},"assertTestPlanFile");import It from"path";import xt from"fs";var xe=c(o=>{let e=It.join(o,".vibe","user_flows");try{return xt.readFileSync(e,"utf8")}catch(t){let r=t.message.toLowerCase();if(r.includes("enoent")||r.includes("no such file"))return s("[readUserFlowsRaw] User flows file not found, returning empty content"),"";throw t}},"readUserFlowsRaw"),Je=c(async o=>{try{let e=xe(o);if(!e.trim()){s("[assertUserFlowsFile] User flows file not found or empty, continuing without user flows");return}if(!(await ue(e)).isValid)return s("[assertUserFlowsFile] Returning CRITIQUE - Invalid user flows file format"),new b({confidence:1,feedbacks:[{text:"Invalid user flows format in .vibe/user_flows file. Please provide valid CSV format or remove the file to proceed without user flows.",structured:{violation:"INVALID_USER_FLOWS_FORMAT",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Fix the CSV format in .vibe/user_flows file or remove the file to proceed without user flows documentation.",severity:"HIGH"}]}]});s("[assertUserFlowsFile] User flows file validated successfully");return}catch(e){let t=e.message.toLowerCase();if(t.includes("enoent")||t.includes("no such file")){s("[assertUserFlowsFile] User flows file not found, continuing without user flows");return}return s("[assertUserFlowsFile] Returning CRITIQUE - Error reading .vibe/user_flows file"),new b({confidence:1,feedbacks:[{text:`Error reading .vibe/user_flows file: ${t}. Please fix the file permissions or remove the file to proceed without user flows.`,structured:{violation:"USER_FLOWS_ACCESS_ERROR",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:`Fix file permissions for .vibe/user_flows or remove the file to proceed without user flows. Error: ${t}`,severity:"HIGH"}]}]})}},"assertUserFlowsFile");var Nt=c(o=>/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(o.trim()),"isValidUUID"),Ye=c(o=>{let e=Ke.join(o,".vibe"),t=Ke.join(e,"uid");X.existsSync(e)||X.mkdirSync(e,{recursive:!0});let r;try{if(X.existsSync(t)){let i=X.readFileSync(t,"utf8").trim();if(Nt(i))return i;s(`[readAppUID] Invalid UUID found in ${t}, replacing with new one`)}return r=Rt(),X.writeFileSync(t,r,"utf8"),s(`[readAppUID] Generated new app UID: ${r}`),r}catch(i){throw s("[readAppUID] Error reading UID:"),s(v(i)),i}},"readAppUID"),Xe=c(async o=>Ot(o.projectFolderPath)??kt(o)??await Lt(o)??await qe(o.projectFolderPath)??await Je(o.projectFolderPath)??await Ut(o),"assertEvaluationRequest"),Ot=c(o=>{if(!o)return s("[assertEvaluationRequest] Returning CRITIQUE - Missing project folder path"),new b({confidence:1,feedbacks:[{text:"UNACCEPTABLE: Missing projectFolderPath. FORBIDDEN to proceed without project path.",structured:{violation:"MANDATORY_PROJECT_PATH",testId:"N/A",severity:"BLOCKING",penalty:"$1000"},suggestions:[{type:"action",content:`RULE 1: Provide the absolute path to the project folder (e.g., '/path/to/project').
                                NO EXCEPTIONS.`,severity:"HIGH"}]}]})},"assertProjectFolderPath"),kt=c(o=>{let{projectRunCommand:e,projectRunUrl:t}=o;if(!t&&!e)return s("[assertEvaluationRequest] Returning CRITIQUE - Missing project run command"),new b({confidence:1,feedbacks:[{text:"UNACCEPTABLE: Missing projectRunCommand. FORBIDDEN to proceed without run command or running server address.",structured:{violation:"MANDATORY_PROJECT_RUN_COMMAND",testId:"N/A",severity:"BLOCKING",penalty:"$1000"},suggestions:[{type:"action",content:`RULE 2: Either provide the run command to start the project locally (e.g., 'yarn dev' or 'npm start') OR provide the projectRunUrl of an already running server.
                            NO EXCEPTIONS.`,severity:"HIGH"}]}]})},"assertProjectRunCommand"),Lt=c(async o=>{let{projectRunUrl:e}=o;if(e){if(!/^(https?|file):\/\/\S*$/.test(e))return s("[assertEvaluationRequest] Returning CRITIQUE - Invalid project run address format"),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: Invalid projectRunUrl format '${e}'. Must be a valid HTTP/HTTPS/FILE URL.`,structured:{violation:"INVALID_PROJECT_RUN_ADDRESS",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Provide a valid URL format for projectRunUrl (e.g., 'http://localhost:3000', 'https://localhost:8080', 'file:///path/to/file.html').",severity:"HIGH"}]}]});try{await ce(e)}catch(r){return s("validateWebappUrl Error:"),s(v(r)),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: Unaccessible projectRunUrl '${e}'.`,structured:{violation:"UNACCESSIBLE_PROJECT_RUN_ADDRESS",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Provide an accessible URL for projectRunUrl",severity:"HIGH"}]}]})}}},"assertProjectRunUrl"),Ut=c(async o=>{let{targetTests:e}=o;if(e){if(!Array.isArray(e))return s("[assertTargetTests] Returning CRITIQUE - targetTests must be an array"),new b({confidence:1,feedbacks:[{text:"UNACCEPTABLE: targetTests must be an array. FORBIDDEN to proceed with invalid format.",structured:{violation:"INVALID_TARGET_TESTS_FORMAT",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Provide targetTests as an array of objects with testId and context fields.",severity:"HIGH"}]}]});for(let t=0;t<e.length;t++){let r=e[t];if(!r||typeof r!="object")return s(`[assertTargetTests] Returning CRITIQUE - targetTests[${t}] must be an object`),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: targetTests[${t}] must be an object. FORBIDDEN to proceed with invalid format.`,structured:{violation:"INVALID_TARGET_TEST_ITEM",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Each targetTest item must be an object with testId and context fields.",severity:"HIGH"}]}]});if(!r.testId||typeof r.testId!="string")return s(`[assertTargetTests] Returning CRITIQUE - targetTests[${t}].testId must be a string`),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: targetTests[${t}].testId must be a string. FORBIDDEN to proceed without valid testId.`,structured:{violation:"MISSING_TARGET_TEST_ID",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Provide a valid testId string that matches a testId in test_plan.",severity:"HIGH"}]}]});if(!r.context||typeof r.context!="string")return s(`[assertTargetTests] Returning CRITIQUE - targetTests[${t}].context must be a string`),new b({confidence:1,feedbacks:[{text:`UNACCEPTABLE: targetTests[${t}].context must be a string. FORBIDDEN to proceed without context.`,structured:{violation:"MISSING_TARGET_TEST_CONTEXT",testId:"N/A",severity:"BLOCKING",penalty:"$500"},suggestions:[{type:"action",content:"Provide a context string explaining why this test is being re-run.",severity:"HIGH"}]}]})}s(`[assertTargetTests] Validated ${e.length} target tests structure successfully`)}},"assertTargetTests"),Ze=c(o=>{let e=o.filter(({result:r,error:i})=>i||r?.decision!=="PASS");if(e.length){let r=e.map(({result:a,error:p})=>a||p?.toEvaluationResult()),i=r.flatMap(a=>a.feedbacks||[]).filter(a=>!!a?.text?.trim()||!!a.structured?.violation);return{decision:"CRITIQUE",confidence:Math.max(...r.map(a=>a.confidence)),feedbacks:i,metadata:{parallelExecutions:o.length}}}let t=o.flatMap(({result:r})=>r.feedbacks||[]).filter(r=>!!r?.text?.trim());return{decision:"PASS",confidence:o.length>0?Math.min(...o.map(({result:r})=>r.confidence)):0,feedbacks:t,metadata:{parallelExecutions:o.length}}},"aggregateTestResults");function et(o=6){try{let e=Pt().length,t=Math.round(_t()/1024/1024),r=Math.round(Ct()/1024/1024),i=ie(),n=1/0;try{if(i!=="windows"){let g=Dt("ulimit -n",{encoding:"utf8",timeout:1e3}).trim(),f=parseInt(g);!isNaN(f)&&f>0&&(n=Math.floor(f/60),s(`[calculateOptimalParallelInstances] File descriptor limit: ${f}, allowing ~${n} instances`))}}catch(g){s(`[calculateOptimalParallelInstances] Could not check file descriptor limits: ${g}`)}let a=150,p;if(r<2048){let g;t<=8192?g=800:t<=16384?g=1200:t<=32768?g=1800:g=2400,p=Math.max(1,Math.min(Math.floor(g/a),10)),s(`[calculateOptimalParallelInstances] Memory pressure detected (${r}MB free), using tiered allocation: ${g}MB available for ${t}MB system`)}else{let g=Math.min(2048,Math.max(1024,r*.2)),f=Math.max(0,r-g);p=Math.floor(f/a)}let u=Math.max(1,Math.min(Math.floor(e*2),14)),d;switch(i){case"macos":d=Math.min(e*2+4,16);break;case"linux":d=Math.min(e*2+6,18);break;case"windows":d=Math.min(e*2,12);break;default:d=Math.min(e*2,12)}let m=Math.max(1,Math.min(p,u,d,n,16));return s(`[calculateOptimalParallelInstances] System info: ${e} CPUs, ${t.toLocaleString()}MB total RAM, ${r.toLocaleString()}MB free RAM, OS: ${i}`),s(`[calculateOptimalParallelInstances] Memory calculation: Per instance ${a}MB, Memory-based limit: ${p}`),s(`[calculateOptimalParallelInstances] Calculated limits - Memory: ${p}, CPU: ${u}, Platform: ${d}, FD: ${n===1/0?"unlimited":n}`),s(`[calculateOptimalParallelInstances] Selected optimal instances: ${m}`),m}catch(e){return s(`[calculateOptimalParallelInstances] Error calculating optimal instances: ${e}`),s(`[calculateOptimalParallelInstances] Falling back to default: ${o}`),o}}c(et,"calculateOptimalParallelInstances");var Re=c((o,e,t)=>(s(`[toDashboardSessionUpdate] session: ${o.session_uid}, currentStep: ${e}, test_steps: ${JSON.stringify(o.test_steps)}`),{sessionUid:o.session_uid,currentStep:e,totalSteps:o.test_steps.length,taskName:o.test_name,taskDescription:o.test_description,testId:o.test_id,stepDescriptions:o.test_steps.map((r,i)=>(s(`[buildDashboardSession] Step ${i}: ${JSON.stringify(r)}`),s(`[buildDashboardSession] Step ${i} action type: ${typeof r.action}, value: ${JSON.stringify(r.action)}`),typeof r.action=="string"?r.action:(s(`[buildDashboardSession] WARNING: Step ${i} action is not a string, converting: ${JSON.stringify(r.action)}`),String(r.action||"Unknown action")))),lastUpdate:Date.now(),screenshot:t}),"toDashboardSessionUpdate"),tt=c(o=>{for(let e=0;e<o.length;e++){let t=o[e];if(!t.session_uid)throw new Error(`No session uid found in session ${e}`);if(!t.test_id)throw new Error(`No test ID found in session ${t.session_uid}`);if(!t.test_name&&!t.test_description)throw new Error(`No test name nor description found in session ${t.session_uid}`);if(!t.test_steps?.filter(r=>(r&&typeof r.action!="string"&&s(`[assertQASessions] Invalid action type in session ${t.session_uid}: action=${JSON.stringify(r.action)}, step=${JSON.stringify(r)}`),r?.action&&typeof r.action=="string"&&r.action.trim().length>0)).length)throw new Error(`No valid test steps found in session ${t.session_uid}`)}},"assertQASessions");import*as B from"path";import*as pe from"fs";import{fileURLToPath as Bt}from"url";import Ft from"puppeteer";var st=c((o,e)=>{s(`[fromQASessionToDashboardSession] session: ${o.session_uid}, test_steps: ${JSON.stringify(o.test_steps)}`);let t=o.test_steps.map((r,i)=>(s(`[fromQASessionToDashboardSession] Step ${i}: ${JSON.stringify(r)}`),s(`[fromQASessionToDashboardSession] Step ${i} action type: ${typeof r.action}, value: ${JSON.stringify(r.action)}`),typeof r.action=="string"?r.action:(s(`[fromQASessionToDashboardSession] WARNING: Step ${i} action is not a string, converting: ${JSON.stringify(r.action)}`),String(r.action||"Unknown action"))));return{sessionUid:o.session_uid,position:e,status:"pending",taskName:o.test_name,taskDescription:o.test_description,testId:o.test_id,currentStep:0,totalSteps:o.test_steps.length,stepDescriptions:t,lastUpdate:Date.now()}},"fromQASessionToDashboardSession");var Mt=Bt(import.meta.url),it=B.dirname(Mt),k,T,de,H={maxRetries:3,retryDelay:1e3,recoveryDelay:500},ot=c(o=>{let e=o;for(;e!==B.dirname(e);){let t=B.join(e,"package.json");if(pe.existsSync(t))return e;e=B.dirname(e)}return process.cwd()},"findProjectRoot");async function Vt(){try{if(s("\u{1F504} Attempting to recover dashboard page connection..."),!k||!k.isConnected())return s("\u274C Dashboard browser is disconnected, cannot recover"),!1;let e=(await k.pages()).find(n=>!n.isClosed());if(e)return T=e,s("\u2705 Recovered dashboard page connection"),!0;let t=ot(it),i=`file://${B.join(t,"src/dashboard/index.html")}`;return T=await k.newPage(),await T.goto(i),T.on("console",async n=>{let a=n.text();if((a.includes("EXTERNAL_URL_REQUEST")||a.includes("Opening external app dashboard"))&&s(`[Dashboard Console] ${a}`),a.startsWith("EXTERNAL_URL_REQUEST:")){let p=a.replace("EXTERNAL_URL_REQUEST:","").trim();s(`[Dashboard] Opening external URL in system browser: ${p}`);let{default:u}=await import("open");try{await u(p),s(`[Dashboard] Successfully opened ${p} in system browser`)}catch(d){s(`[Dashboard] Failed to open ${p}: ${d.message}`)}}}),await T.evaluate(()=>{window.addEventListener("openExternalUrl",n=>{console.log("EXTERNAL_URL_REQUEST:",n.detail.url)})}),await new Promise(n=>setTimeout(n,H.recoveryDelay)),s(`\u2705 Created new dashboard page and navigated to ${i}`),!0}catch(o){return s(`\u274C Failed to recover dashboard page: ${o}`),!1}}c(Vt,"recoverDashboardPage");async function Z(o,e,t){let r=null;for(let i=1;i<=H.maxRetries;i++)try{return await o()}catch(n){r=n;let a=t?` for session ${t}`:"";if(s(`\u26A0\uFE0F Dashboard error in ${e}${a} (attempt ${i}/${H.maxRetries}): ${r.message}`),i===H.maxRetries){s(`\u274C Max retries reached for ${e}${a}`);break}if(!await Vt()){s(`\u274C Failed to recover dashboard page, stopping retries for ${e}${a}`);break}await new Promise(u=>setTimeout(u,H.retryDelay)),s(`\u{1F504} Retrying ${e}${a} (attempt ${i+1}/${H.maxRetries})`)}if(r){let i=t?` for session ${t}`:"";s(`\u274C Failed to execute ${e}${i} after ${H.maxRetries} attempts: ${r.message}`)}return null}c(Z,"executeWithRetry");var nt=c(async(o,e,t,r)=>{try{s(`\u{1F680} Opening Puppeteer dashboard with ${o.length} sessions`);let i=ot(it),n=B.join(i,"dist/dashboard/index.html"),a=B.join(i,"src/dashboard/index.html"),p=pe.existsSync(n)?n:a;if(!pe.existsSync(p))throw new Error(`Dashboard HTML file not found at: ${p}`);if(k&&T)return s("\u{1F504} Reusing existing dashboard browser instance"),await rt(e,o,t,r);let u=`file://${p}`;return k=await Ft.launch({headless:!1,defaultViewport:null,protocolTimeout:0,args:["--no-sandbox","--disable-setuid-sandbox","--start-maximized","--app="+u,"--disable-web-security","--disable-features=VizDisplayCompositor","--disable-background-timer-throttling","--disable-renderer-backgrounding","--disable-backgrounding-occluded-windows","--disable-infobars","--disable-session-crashed-bubble","--disable-translate","--no-first-run","--disable-default-apps"]}),de=z.register(k,"Dashboard-Browser"),T=(await k.pages())[0],T.on("console",async m=>{let g=m.text();if((g.includes("EXTERNAL_URL_REQUEST")||g.includes("Opening external app dashboard"))&&s(`[Dashboard Console] ${g}`),g.startsWith("EXTERNAL_URL_REQUEST:")){let f=g.replace("EXTERNAL_URL_REQUEST:","").trim();s(`[Dashboard] Opening external URL in system browser: ${f}`);let{default:h}=await import("open");try{await h(f),s(`[Dashboard] Successfully opened ${f} in system browser`)}catch(y){s(`[Dashboard] Failed to open ${f}: ${y.message}`)}}}),await T.evaluate(()=>{window.addEventListener("openExternalUrl",m=>{console.log("EXTERNAL_URL_REQUEST:",m.detail.url)})}),k.on("disconnected",()=>{s("\u{1F534} Dashboard browser disconnected"),de&&(z.unregister(de),de=void 0),k=void 0,T=void 0}),s(`\u2705 Dashboard opened in maximized app mode: file://${p}`),await rt(e,o,t,r)}catch(i){s(`\u274C Failed to open dashboard: ${i}`);return}},"openRealtimeBrowser");async function rt(o,e,t,r){if(s(`[initializeDashboardData] manual filter: ${o}, num of total sessions: ${e.length}`),!T)return;let i=o?await zt(e):void 0;if(o&&!i?.length)throw new Error("Manual filter enabled, but no tests were selected");let n=i?.length?e.filter(u=>i.includes(u.test_id)):e;s(`[initializeDashboardData] num of filtered sessions: ${n.length}`);let a=n.map((u,d)=>st(u,d));return await Z(async()=>{await T.evaluate((u,d,m)=>{window.addEventListener("openExternalUrl",g=>{console.log("EXTERNAL_URL_REQUEST:",g.detail.url)}),window.dispatchEvent(new CustomEvent("dashboardInit",{detail:{sessions:u,appUid:d,apiUrl:m}}))},a,t,r)},"initializeDashboardData")!==null&&s(`\u{1F4CA} Dashboard initialized with ${a.length} sessions`),i}c(rt,"initializeDashboardData");async function zt(o){if(T)try{s(`\u{1F3AF} Showing test filtering UI for ${o.length} tests`);let e=o.map(r=>({id:r.test_id,title:r.test_name||r.test_description})),t=await T.evaluate(`
            (function(tests) {
                return new Promise(function(resolve) {
                    console.log('\u{1F3AF} [PAGE] Starting filtering UI with ' + tests.length + ' tests');

                    // Dispatch event to show filtering UI
                    window.dispatchEvent(
                        new CustomEvent("showTestFilter", {
                            detail: { tests: tests },
                        })
                    );

                    console.log('\u23F3 [PAGE] Waiting for user selection...');

                    // Wait for user to make selection
                    var handleFilterComplete = function(event) {
                        var customEvent = event;
                        console.log(
                            '\u{1F389} [PAGE] Filter complete event received with IDs:',
                            customEvent.detail.selectedTestIds
                        );
                        window.removeEventListener("filterComplete", handleFilterComplete);
                        resolve(customEvent.detail.selectedTestIds);
                    };
                    window.addEventListener("filterComplete", handleFilterComplete);
                    console.log(
                        '\u{1F442} [PAGE] Event listener set up, waiting for filterComplete event'
                    );
                });
            })(${JSON.stringify(e)})
                `);return s(`\u2705 User selected ${t?.length||0} ${oe(t?.length||0,"test")}: ${t?.join(", ")||"none"}`),t}catch(e){s(`\u274C Failed to show test filtering UI: ${e}`);return}}c(zt,"showTestFilteringUI");var at=c(async o=>{if(!T)return;await Z(async()=>{await T.evaluate(t=>{window.dispatchEvent(new CustomEvent("dashboardRunning",{detail:{sessionUid:t}}))},o)},"markDashboardSessionRunning",o)!==null&&s(`\u{1F504} Dashboard session ${o} marked as running`)},"markDashboardSessionRunning"),Pe=c(async o=>{if(!T){s(`\u26A0\uFE0F Dashboard not available for session ${o.sessionUid}`);return}await Z(async()=>{await T.evaluate(t=>{let r={sessionUid:t.sessionUid,status:"running",currentStep:t.currentStep,totalSteps:t.totalSteps,taskName:t.taskName,taskDescription:t.taskDescription,stepDescriptions:t.stepDescriptions,lastUpdate:Date.now(),testId:t.testId};window.dispatchEvent(new CustomEvent("dashboardUpdate",{detail:{sessionUid:t.sessionUid,data:r,screenshot:t.screenshot}}))},o)},"updateDashboardSession",o.sessionUid)!==null&&s(`\u{1F4C8} Dashboard updated for session ${o.sessionUid}`)},"updateDashboardSession"),Ce=c(async(o,e)=>{if(!T)return;await Z(async()=>{await T.evaluate((r,i)=>{window.dispatchEvent(new CustomEvent("dashboardComplete",{detail:{sessionUid:r,result:i}}))},o,e)},"markDashboardSessionComplete",o)!==null&&s(`\u{1F3C1} Dashboard session ${o} marked as ${e.decision} (kept visible)`)},"markDashboardSessionComplete"),_e=c(async o=>{if(!T)return;await Z(async()=>{await T.evaluate(t=>{window.dispatchEvent(new CustomEvent("dashboardAborted",{detail:{sessionUid:t}}))},o)},"markDashboardSessionAborted",o)!==null&&s(`\u{1F6D1} Dashboard session ${o} marked as aborted`)},"markDashboardSessionAborted");import Jt from"p-limit";import ei from"puppeteer";import Qt from"sharp";import me from"imghash";import{writeFileSync as De,mkdirSync as Ht}from"fs";import{resolve as ge}from"path";async function Gt(o,e){s(`\u{1F4F8} Starting visual analysis for ${e.length} elements...`);let t=ge(process.cwd(),"debug");try{Ht(t,{recursive:!0}),s(`\u{1F4C1} Created debug directory: ${t}`)}catch(a){s(`\u{1F4C1} Debug directory already exists or creation failed: ${a}`)}let r=0;for(let a of e)try{r++,s(`\u{1F4F8} Analyzing element ${r}/${e.length}: ${a.selector}`),await o.evaluate(d=>{let m=document.querySelector(d);m&&m.scrollIntoView({behavior:"instant",block:"center"})},a.selector),await new Promise(d=>setTimeout(d,100));let p=await o.screenshot({fullPage:!1,type:"png"}),u=ge(t,`element-${r.toString().padStart(2,"0")}-before.png`);De(u,p);try{await o.hover(a.selector),await new Promise(f=>setTimeout(f,300));let d=await o.screenshot({fullPage:!1,type:"png"}),m=ge(t,`element-${r.toString().padStart(2,"0")}-after.png`);De(m,d),s(`\u{1F4BE} Saved screenshots: ${u.split("/").pop()} & ${m.split("/").pop()}`);let g=await Wt(Buffer.from(p),Buffer.from(d),a.boundingBox);a.hoverAnalysis=g,await o.mouse.move(0,0),await new Promise(f=>setTimeout(f,100))}catch(d){s(`\u26A0\uFE0F Could not hover element ${a.selector}: ${d}`),a.hoverAnalysis={hasVisualChange:!1,changeScope:"none",changeIntensity:0,changesOutsideElement:!1,changeDescription:`Could not hover element: ${d}`}}}catch(p){s(`\u274C Error analyzing element ${a.selector}: ${p}`),a.hoverAnalysis={hasVisualChange:!1,changeScope:"none",changeIntensity:0,changesOutsideElement:!1,changeDescription:`Analysis failed: ${p}`}}let i=ge(t,"element-summary.txt"),n=e.map((a,p)=>{let u=(p+1).toString().padStart(2,"0"),d=a.hoverAnalysis?.hasVisualChange?"\u2705":"\u274C",m=a.hoverAnalysis?.changeIntensity||0;return`${u}. ${d} ${a.tagName.toUpperCase()} - ${a.selector} (${m}% change)`}).join(`
`);De(i,n),s(`\u{1F4CB} Created element summary: ${i}`),s(`\u2705 Visual analysis complete for ${r} elements`)}c(Gt,"performHoverVisualAnalysis");async function Wt(o,e,t){let r=await qt(o,e);if(r.totalChangedPixels===0)return{hasVisualChange:!1,changeScope:"none",changeIntensity:0,changesOutsideElement:!1,changeDescription:"No visual changes detected (pHash comparison)"};let i=Math.round(100-r.similarityPercentage),n=r.changesOutsideElement,a;i>0?a="element-only":a="none";let p=r.hammingDistance===-1?"byte comparison":"pHash (DCT)",u=r.hammingDistance!==-1?` (Hamming distance: ${r.hammingDistance})`:"",d=`${i}% perceptual change detected using ${p}${u}. ${n?"Changes detected outside element bounds.":"Changes confined to element area."}`;return{hasVisualChange:!0,changeScope:a,changeIntensity:i,changesOutsideElement:n,changeDescription:d}}c(Wt,"analyzeVisualDifference");function jt(o,e){if(o.length!==e.length)throw new Error("Hash lengths must be equal for Hamming distance calculation");let t=0;for(let r=0;r<o.length;r++)o[r]!==e[r]&&t++;return t}c(jt,"hammingDistance");async function qt(o,e){try{let t=await me.hash(o.toString("base64"),16,"hex"),r=await me.hash(e.toString("base64"),16,"hex"),i=me.hexToBinary(t),n=me.hexToBinary(r),a=jt(i,n),p=i.length,u=(p-a)/p*100,d=100-u,m=await Qt(o).metadata(),g=(m.width||0)*(m.height||0),f=Math.round(d/100*g),h=!1;return s(`\u{1F50D} pHash (DCT) Analysis: Hamming distance: ${a}/${p}, Similarity: ${u.toFixed(1)}%, Change: ${d.toFixed(1)}%`),{totalPixels:g,totalChangedPixels:f,changesOutsideElement:h,hammingDistance:a,similarityPercentage:u}}catch(t){s(`\u26A0\uFE0F pHash comparison failed, falling back to basic comparison: ${t}`);let r=Math.min(o.length,e.length),i=0;for(let a=0;a<r;a++)o[a]!==e[a]&&i++;let n=i/r*100;return{totalPixels:r,totalChangedPixels:i,changesOutsideElement:n>10,hammingDistance:-1,similarityPercentage:100-n}}}c(qt,"comparePixels");function lt(o){try{s(`\u{1F50D} DEBUG: DOM data type: ${typeof o}`);let e=o?.elements||[];s(`\u{1F50D} Found ${e.length} total elements in DOM`);let t=e.filter(i=>i.elementId&&i.elementId.trim()!=="");s(`\u{1F3AF} Found ${t.length} elements with elementId (data-qa-id)`);let r=t.map(i=>{let n=`[data-qa-id="${i.elementId}"]`;return{elementId:i.elementId,selector:n,bounds:{x:i.bounds?.left||0,y:i.bounds?.top||0,width:i.bounds?.width||0,height:i.bounds?.height||0},text:i.text||"",interaction:i.interaction||"unknown",hasHover:i.hasHover||!1}});return r.length>0?(s("\u{1F3AF} QA elements for hover analysis:"),r.slice(0,5).forEach((i,n)=>{s(`  ${n+1}. ${i.selector} (${i.interaction}) - "${i.text.substring(0,50)}"`)}),r.length>5&&s(`  ... and ${r.length-5} more`)):(s("\u26A0\uFE0F No elements with elementId found. Sample elements:"),e.slice(0,3).forEach((i,n)=>{s(`  ${n+1}. text: "${i.text?.substring(0,50)||"N/A"}", elementId: "${i.elementId||"NONE"}", interaction: "${i.interaction||"N/A"}"`)})),r}catch(e){return s(`\u26A0\uFE0F Error extracting QA elements from DOM: ${e}`),[]}}c(lt,"extractQAElementsFromDOM");async function ct(o,e){let t=Date.now();s(`\u{1F50D} Starting QA hover analysis for ${e.length} elements`);try{let r=e.map(a=>({selector:a.selector,tagName:"unknown",text:a.text,attributes:{"data-qa-id":a.elementId,interaction:a.interaction},boundingBox:a.bounds,hoverIndicators:a.hasHover?["css-hover"]:["interactive"]}));r.length>0&&await Gt(o,r);let i=Date.now()-t,n=r.filter(a=>a.hoverAnalysis?.changeIntensity&&a.hoverAnalysis.changeIntensity>0).map(a=>({elementId:a.attributes["data-qa-id"],changeIntensity:a.hoverAnalysis.changeIntensity}));return s(`\u2705 QA hover analysis complete! Found ${n.length} elements with hover changes (analyzed ${r.length} total) in ${i}ms`),{totalElements:n.length,hoverableElements:n,analysisTime:i}}catch(r){throw s(`\u274C QA hover analysis failed: ${r}`),r}}c(ct,"runHoverAnalysisOnQAElements");var fe=class o{static{c(this,"EvaluatorOptimizer")}static evalCalls=0;tool=new le;args;constructor(e){this.args=e}async evaluate(e){let t=`evaluate-${++o.evalCalls}-${Date.now()}`;l.start("evaluate",{uid:t});try{s("=== [EvaluatorOptimizer] evaluate called: ===");let r=JSON.stringify(e,null,2);s(r),l.start("evaluate-request-validation",{uid:t});let i=await Xe(e);if(l.end("evaluate-request-validation",{uid:t,hasError:!!i}),i)throw l.end("evaluate",{uid:t,result:"assertion-error"}),s("=== [EvaluatorOptimizer] assertion error: ==="),s(JSON.stringify(i,null,2)),i;s("=== [EvaluatorOptimizer] Starting parallel QA automation workflow ==="),R.evaluateStarted();let n=await this.executeQAWorkflow(e),a=n.decision==="PASS";return l.end("evaluate",{uid:t,result:n.decision}),{...n,systemNotifications:n.systemNotifications||[{type:a?"success":"warning",message:a?`${se} has completed the evaluation. All passed!`:`${se} has found ${n.feedbacks.length} ${oe(n.feedbacks.length,"issue")}. I'm on it!`,priority:"high",actionRequired:!a}]}}catch(r){throw l.end("evaluate",{uid:t,result:"error"}),s("=== [EvaluatorOptimizer] Error during evaluation: ==="),s(v(r)),K(r,new b({confidence:.1,feedbacks:[{text:"SYSTEM ERROR: Evaluator offline. FORBIDDEN to proceed without validation.",structured:{violation:`EVALUATOR_FAILURE: ${r.message}`,testId:"N/A",penalty:"$500"}}],metadata:{error:r.message},systemNotifications:[{type:"error",message:`${se} is offline. Please contact support for assistance.`,priority:"high",actionRequired:!0}]})),r}}async executeQAWorkflow(e){let t=`workflow-${o.evalCalls}-${Date.now()}`;l.start("executeQAWorkflow",{uid:t});let{projectFolderPath:r,projectRunCommand:i,projectRunUrl:n,appDescription:a,targetTests:p,userPrompt:u,fps:d}=e,{start:m,only:g,onlyIndex:f,onlyTestId:h,ignoreIndices:y,ignoreStrings:$,"fail-fast":I,"manual-filter":F}=this.args,P,L;try{if(l.start("webapp-setup",{uid:t}),n)try{await ce(n),P=n,s(`[EvaluatorOptimizer] Using provided webapp URL: ${n}`)}catch(w){l.end("webapp-setup",{uid:t,result:"url-validation-failed"}),l.end("executeQAWorkflow",{uid:t,result:"url-validation-failed"}),s("[EvaluatorOptimizer] Failed to validate provided webapp URL"),s(v(w));let x=n?.startsWith("file:///");throw new b({confidence:.1,feedbacks:[{text:x?`Cannot access the specified file at ${n}. Please ensure the file exists and is accessible.`:`Cannot connect to the specified running server at ${n}. Please ensure the server is running and accessible.`,structured:{violation:`${x?"FILE_NOT_FOUND":"RUNNING_SERVER_UNAVAILABLE"}: ${w?.message||"Unknown error"}`,testId:"N/A",severity:"BLOCKING"},suggestions:[{type:"action",content:x?`Verify that the file exists at the specified path: ${n}`:`Verify that the development server is running at ${n} and accessible.`,severity:"HIGH"}]}]})}else if(i)try{L=new Y,P=(await L.startWebapp(r,i)).url,s(`[EvaluatorOptimizer] Started webapp at "${P}"`)}catch(w){throw l.end("webapp-setup",{uid:t,result:"webapp-start-failed"}),l.end("executeQAWorkflow",{uid:t,result:"webapp-start-failed"}),s("[EvaluatorOptimizer] Failed to start webapp"),s(v(w)),new b({confidence:.9,feedbacks:[{text:`Failed to start webapp: ${w.message}`,structured:{violation:`WEBAPP_START_FAILURE: ${w.message}`,testId:"N/A",severity:"BLOCKING"},suggestions:[{type:"action",content:"Check the project run command and ensure all dependencies are installed.",severity:"HIGH"}]}]})}if(!P)throw new Error("No webapp URL available - this should not happen");l.end("webapp-setup",{uid:t,webappUrl:P});let E=r.split("/").filter(Boolean).pop()||"unknown-app";s(`[EvaluatorOptimizer] Starting QA workflow for "${E}"`),l.start("sessions-preparation",{uid:t});let M=Ye(r),S=Ie(r);if(f||h){s("[EvaluatorOptimizer] ========== --only parameter detected =========="),s(`[EvaluatorOptimizer] onlyIndex: ${f}`),s(`[EvaluatorOptimizer] onlyTestId: ${h}`),s(`[EvaluatorOptimizer] Original test plan length: ${S.length} characters`),s(`[EvaluatorOptimizer] Original test plan content (first 200 chars):
${S.substring(0,200)}...`);try{s("[EvaluatorOptimizer] Calling filterTestPlanCSV...");let w=await Ae(S,f,h);if(s("[EvaluatorOptimizer] filterTestPlanCSV returned successfully"),s(`[EvaluatorOptimizer] Filter result - found: ${w.found}, originalTestCount: ${w.originalTestCount}, filteredTestCount: ${w.filteredTestCount}`),!w.found){let x=h||`index ${f}`;throw new b({confidence:1,feedbacks:[{text:`Test not found: "${x}" does not exist in the test plan. Available tests: ${w.originalTestCount}`,structured:{violation:"INVALID_TEST_FILTER",testId:h||`index-${f}`,severity:"BLOCKING"},suggestions:[{type:"action",content:`Check your test plan and use a valid test ID or index (1-${w.originalTestCount})`,severity:"HIGH"}]}]})}s(`[EvaluatorOptimizer] Filtered test plan length: ${w.filteredCSV.length} characters`),s(`[EvaluatorOptimizer] Filtered test plan content:
${w.filteredCSV}`),S=w.filteredCSV,s("[EvaluatorOptimizer] Successfully applied filtered test plan")}catch(w){if(s(`[EvaluatorOptimizer] ERROR filtering test plan CSV: ${v(w)}`),s(`[EvaluatorOptimizer] Error stack: ${w instanceof Error?w.stack:"No stack trace"}`),w instanceof b)throw s("[EvaluatorOptimizer] Re-throwing CritiqueError for invalid test filter"),w;s("[EvaluatorOptimizer] Continuing with original test plan due to unexpected filtering error")}s("[EvaluatorOptimizer] ========== End --only parameter processing ==========")}else s(`[EvaluatorOptimizer] No --only parameter detected (onlyIndex: ${f}, onlyTestId: ${h})`);let j=xe(r),{sessions:A,runId:D}=await new Q(this.args["api-url"]).asyncPrepWithStatePolling({app_uid:M,app_name:E,app_description:a,context:{timestamp:Date.now(),locale:Intl.DateTimeFormat().resolvedOptions().locale||"en_US"},initial_plan:S,user_flows:j,requirements:u,target_tests:JSON.stringify(p??[]),only:f||h?void 0:typeof g=="number"?g:void 0,start:m,ignore_indices:y,ignore_test_ids:$,thinking_budget:this.args["thinking-budget"]});if(tt(A),s(`[EvaluatorOptimizer] Received ${A.length} QA sessions from /async_prep endpoint (after server-side filtering) for runId: ${D}`),A.length===0)throw l.end("sessions-preparation",{uid:t,result:"no-sessions-available"}),l.end("executeQAWorkflow",{uid:t,result:"no-sessions-available"}),new b({confidence:1,feedbacks:[{text:"No sessions available to run. This may be due to filtering parameters or no test plan available.",structured:{violation:"NO_SESSIONS_AVAILABLE",testId:"N/A",severity:"BLOCKING"},suggestions:[{type:"action",content:"Review your filtering parameters and ensure test plan is available.",severity:"HIGH"}]}],metadata:{filteredSessionCount:A.length,hasOnlyFilter:g!==void 0,hasStartFilter:m!==void 0,hasIgnoreFilters:(y?.length||0)+($?.length||0)>0}});if(l.end("sessions-preparation",{uid:t,runId:D,sessionCount:A.length}),s(`[EvaluatorOptimizer] Prepared ${A.length} QA sessions:
${A.map(w=>w.session_uid).join(`
`)}`),Ve)s("[EvaluatorOptimizer] Skipping dashboard opening in test environment");else{l.start("launching-dashboard",{uid:t,runId:D,sessionCount:A.length});try{let w=await nt(A,F,M,this.args["api-url"]);if(w?.length){let x=A.filter(C=>w.includes(C.test_id));s(`[EvaluatorOptimizer] Manual filter applied: ${x.length}/${A.length} sessions selected`),A.splice(0,A.length,...x)}l.end("launching-dashboard",{uid:t,runId:D,sessionCount:A.length})}catch(w){l.end("launching-dashboard",{uid:t,runId:D,sessionCount:A.length,error:w.message}),s("[EvaluatorOptimizer] Failed to open realtime browser"),s(v(w))}}let Ne=this.args.parallel??et();s(`[EvaluatorOptimizer] Executing ${Ne} parallel instances ${this.args.parallel?"(user-specified)":"(auto-calculated)"}`);let Oe=Jt(Ne),ee=A.map((w,x)=>{let C=new AbortController,U=new Q(this.args["api-url"],C.signal);s(`[EvaluatorOptimizer] Created executor for session ${w.session_uid} (testId: ${w.test_id})`);let _={},Le=c(()=>{_.executorStartTime=Date.now(),_.testTimeoutMs=this.args["test-timeout"]*1e3,_.timeoutId=setTimeout(()=>{let N=Date.now()-_.executorStartTime;s(`[EvaluatorOptimizer ${w.session_uid}] Test timeout after ${N}ms (limit: ${_.testTimeoutMs}ms)`),Ue.abort()},_.testTimeoutMs)},"setExecutorTimeout"),q=c(()=>{typeof _.timeoutId<"u"&&(clearTimeout(_.timeoutId),delete _.timeoutId)},"clearExecutorTimeout"),mt=c(()=>{s(`[EvaluatorOptimizer ${w.session_uid}] Resetting test timeout`),q(),Le()},"resetExecutorTimeout"),Ue={session:w,execute:c(()=>Oe(async()=>{s(`[EvaluatorOptimizer] Starting task ${x+1}/${A.length}: ${w.session_uid} (testId: ${w.test_id})`),Le(),at(w.session_uid);try{let N=await this.#e(w,P,U,C,mt,r,D,d);return q(),N}catch(N){if(q(),await Ce(w.session_uid,{decision:"CRITIQUE",feedbacks:[{structured:{error:N.message}}]}),N instanceof b)return{result:N.toEvaluationResult()};let Be=Date.now()-_.executorStartTime;if(C.signal.aborted&&Be>=_.testTimeoutMs)return{result:new b({confidence:1,feedbacks:[{text:`Test execution timed out after ${this.args["test-timeout"]} seconds. This is considered a stale test.`,structured:{violation:"STALE_TEST",severity:"HIGH",testId:w.test_id},suggestions:[{type:"action",content:"Review test complexity or increase timeout limit with --test-timeout parameter",severity:"HIGH"}]}],metadata:{staleTest:!0,executionTimeMs:Be,timeoutLimitMs:_.testTimeoutMs}}).toEvaluationResult()};throw N}finally{q(),R.incrementCompletedTests()}}),"execute"),abort:c(()=>{q(),s(`[EvaluatorOptimizer ${w.session_uid}] Aborting session`),U.abort(w.session_uid).catch(N=>{s(`[EvaluatorOptimizer ${w.session_uid}] Failed to call abort API: ${N.message}`)}).finally(()=>{C.abort(),_e(w.session_uid)})},"abort")};return Ue});R.setTotalTests(ee.length),R.testsExecutionStarted(),l.start("tests-execution",{uid:t,runId:D,sessionCount:A.length});let te,ke=ee.map(w=>{let x=w.session.session_uid,C=w.session.test_id;return w.execute().then(U=>(s(`[EvaluatorOptimizer ${x}] Test ${C} completed with decision: ${U.result.decision}, error: ${U.error??"None"}`),U)).catch(U=>{throw s(`[EvaluatorOptimizer ${x}] Test ${C} failed with error: ${v(U)}`),U})});I?te=await Me(ke,async(w,{result:x,error:C})=>!C&&x.decision==="PASS",async w=>{Oe.clearQueue(),w.forEach(x=>{ee[x].abort()})}):te=(await Promise.allSettled(ke)).map((w,x)=>{switch(w.status){case"fulfilled":return w.value;case"rejected":{let C=b.fromError(w.reason,ee[x].session.test_id);return{result:C.toEvaluationResult(),error:C}}}}),l.end("tests-execution",{uid:t,runId:D,resultCount:te.length}),l.start("result-aggregation",{uid:t,runId:D});let ye=Ze(te);return l.end("result-aggregation",{uid:t,runId:D,decision:ye.decision}),l.end("executeQAWorkflow",{uid:t,result:ye.decision}),ye}catch(E){l.end("executeQAWorkflow",{uid:t,error:E.message}),s("[EvaluatorOptimizer] Error in QA workflow execution:"),s(v(E));let M=E?.message||"Unknown error";throw K(E,new b({confidence:.1,feedbacks:[{text:`QA automation failed: ${M}`,structured:{violation:`QA_WORKFLOW_FAILURE: ${M}`,testId:"N/A",severity:"BLOCKING"},suggestions:[{type:"action",content:"Check the project setup and ensure all dependencies are available.",severity:"HIGH"}]}]})),E}finally{await L?.stopWebapp()}}async#e(e,t,r,i,n,a,p,u){let d=e.session_uid,m=e.test_id;l.start("qa-session",{uid:d,testId:m});let g=new ae(e,t,!this.args["no-headless"],this.args.viewport);try{await g.launchBrowser(),await new Promise($=>setTimeout($,2e3));let f=await g.getViewportBounds(),h=await g.takeScreenshot(f);await Pe(Re(e,0,h));let y=await this.#t(e,g,r,i,n,a,p,u);return l.end("qa-session",{uid:d,testId:m,decision:y.decision}),{result:y}}catch(f){if(i.signal.aborted)return l.end("qa-session",{uid:d,testId:m,result:"aborted"}),s(`[EvaluatorOptimizer ${d}] execution aborted`),await _e(d),{result:new b({confidence:0,feedbacks:[{text:"QA session aborted",structured:{violation:"QA_AUTOMATION_ABORTED",testId:m}}],metadata:{aborted:!0}}).toEvaluationResult()};l.end("qa-session",{uid:d,testId:m,result:"error"}),s(`[EvaluatorOptimizer ${d}] execution error (testId: ${m})`),s(v(f));let h=f?.message||"Unknown error";throw K(f,new b({confidence:.1,feedbacks:[{text:`QA automation failed: ${h}`,structured:{violation:`QA_SESSION_FAILURE: ${h}`,testId:m,severity:"BLOCKING"},suggestions:[{type:"action",content:"Check the project setup and ensure all dependencies are available.",severity:"HIGH"}]}]})),f}finally{await g.cleanup()}}async#t(e,t,r,i,n,a,p,u){let d=e.session_uid,m=e.test_id;l.start("qa-loop",{uid:d,testId:m});let g=!0,f,h,y,$;for(;g;){if(i.signal.aborted)throw s(`[executeQALoop ${d}] Loop aborted by abort controller`),new Error("QA loop aborted");let I=f?.curr_step??0;try{l.start("qa-step",{uid:d,testId:m,step:`${I}`});let F=await t.extractDOM(),P=await t.getViewportBounds(),L=await t.getDevicePixelRatio();await t.freezePage();let E,M;try{let S=await t.takeScreenshot();try{ze(a,p,d,I,S)}catch{}M=await t.takeScreenshot(P);let j={x0:P.x0*L,y0:P.y0*L,x1:P.x1*L,y1:P.y1*L},A={dom:F,screenshot:S,viewportBounds:j,...h&&{error:h},...y&&{last_action_uid:y},...$&&{deep_explore_results:$}};$?(s("\u{1F4E4} SENDING deep_explore_results to server:"),s(`   \u{1F4CA} Total elements with hover changes: ${$.hover_analysis.totalElements}`),s(`   \u{1F3AF} Elements: ${JSON.stringify($.hover_analysis.hoverableElements,null,2)}`),s(`   \u23F1\uFE0F Analysis time: ${$.hover_analysis.analysisTime}ms`),s(`   \u{1F4CD} Triggered by step: ${$.triggeredByStep}`),s(`   \u{1F552} Timestamp: ${$.explorationTimestamp}`),s(`\u{1F50D} FULL deep_explore_results payload: ${JSON.stringify($,null,2)}`)):s("\u{1F4E4} No deep_explore_results in this step"),E=await r.step(e.session_uid,A)}finally{await t.unfreezePage()}if(y?s(`[executeQALoop ${d}] Sending last_action_uid: ${y}`):s(`[executeQALoop ${d}] No last_action_uid to send (first request or no previous action_uid)`),h=void 0,$=void 0,y=E.action_uid,E.deep_explore_page){s("\u{1F50D} Server requested deep page exploration - running hover analysis");try{let S=lt(F);if(S.length>0){s(`\u{1F3AF} Running hover analysis on ${S.length} QA elements for deep exploration`);let j=await t.getPage();$={hover_analysis:await ct(j,S),triggeredByStep:I,explorationTimestamp:new Date().toISOString()},s("\u2705 Deep exploration complete - results will be sent in next step"),s(`\u{1F50D} STORED deep_explore_results: ${JSON.stringify($,null,2)}`)}else s("\u26A0\uFE0F No QA elements found for deep exploration")}catch(S){s(`\u274C Deep exploration failed: ${S}`)}}else s("\u2139\uFE0F No deep exploration requested by server");if(E.action_uid?s(`[executeQALoop ${d}] Received action_uid: ${E.action_uid}`):s(`[executeQALoop ${d}] No action_uid received`),s(`[executeQALoop ${d}] Received step response  ${JSON.stringify({action:E.action,currStep:I,action_uid:E.action_uid})}`),E.action==="FINISH"&&s(`[executeQALoop ${d}] FINISH response - Full stepResponse: ${JSON.stringify(E,null,2)}`),E.session_status&&E.action!=="FINISH"&&(f=E.session_status,await Pe(Re(e,I,M))),g=await this.#r(E,t,n,u),l.end("qa-step",{uid:d,testId:m,step:`${I}`,action:E.action,shouldContinue:g}),!g){let S=JSON.parse(E.result);return l.end("qa-loop",{uid:d,testId:m,step:`${I}`,decision:S.decision}),s(`[executeQALoop ${d}] FINISH action - Parsed result: ${JSON.stringify(S,null,2)}`),await Ce(d,{decision:S.decision,confidence:S.confidence,feedbacks:S.feedbacks,metadata:S.metadata}),S}}catch(F){let P=F.message;if(this.#s(P)){h=P,s(`[executeQALoop ${d}] Selector error at step ${I}, will propagate to next step: ${P}`),l.end("qa-step",{uid:d,testId:m,step:`${I}`,result:"selector-error-propagated"});continue}else l.end("qa-step",{uid:d,testId:m,step:`${I}`,result:"error"}),l.end("qa-loop",{uid:d,testId:m,step:`${I}`,result:"error"}),s(`[EvaluatorOptimizer ${d}] Error in QA loop, Task ${m}, Step ${I}`),s(v(F)),K(F,new b({confidence:.1,feedbacks:[{text:`QA automation failed at task ${m}, step ${I}:
${P}`,structured:{violation:`QA_STEP_FAILURE: ${P}`,testId:`${m}`,step:`${I}`}}],metadata:{failedStep:I}}))}}throw new Error("QA automation loop ended without FINISH action")}#s(e){return e.includes("Failed to focus on element with selector")||e.includes("Failed to click on element with selector")||e.includes("Cannot find element with selector")||e.includes("data-qa-id")}async#r(e,t,r,i){switch(e.action){case"RESET":return e.is_replay&&(s("[processQAAction] RESET with is_replay=true: Resetting test timeout"),r()),await t.resetPageState(),e.focus&&(s("[processQAAction] RESET: Focusing on element before actions"),await t.focusElement(e.focus)),e.native_click&&(s("[processQAAction] RESET: Clicking on element before actions"),await t.clickElement(e.native_click)),e.keystroke!==void 0&&(s("[processQAAction] RESET: Pressing key before script injection"),await t.pressKey(e.keystroke)),e.script&&await t.executeScript(e.script),!0;case"INJECT":return e.focus&&(s("[processQAAction] INJECT: Focusing on element before actions"),await t.focusElement(e.focus)),e.native_click&&(s("[processQAAction] INJECT: Clicking on element before actions"),await t.clickElement(e.native_click)),e.keystroke!==void 0&&(s("[processQAAction] INJECT: Pressing key before script injection"),await t.pressKey(e.keystroke)),e.script&&await t.executeScript(e.script),await new Promise(n=>setTimeout(n,i?1e3/i+50:500)),!0;case"FINISH":return s("[processQAAction] FINISH: QA automation completed"),!1;default:throw new Error(`Unknown QA action: ${e.action}`)}}async getTool(){return this.tool.get(this.args["api-url"])}};var es=0,he,we=new Kt({name:"evaluator-optimizer-mcp",version:G},{capabilities:{tools:{}}});we.setRequestHandler(Xt,async()=>{try{return{tools:[await he.getTool()]}}catch(o){return s("FATAL ERROR!!! Failed to get tool definition:",o),{tools:[]}}});we.setRequestHandler(Yt,async o=>{let{name:e,arguments:t,_meta:r}=o.params,i=`req-${++es}-${Date.now()}`;R.initialize({progressToken:r?.progressToken,server:we}),R.toolCalled(),l.start("tool-call-handler",{uid:i,toolName:e});try{let n=await he.getTool();if(e===n.name){s("=== Tool called ===");try{l.start("input-validation",{uid:i}),s("=== Validating tool-called input ===");let a=new Zt,p=a.compile(n.inputSchema),u=p(t);if(l.end("input-validation",{uid:i,valid:u}),!u)throw l.end("tool-call-handler",{uid:i,result:"validation-failed"}),new b({confidence:1,feedbacks:[{text:"SYSTEM ERROR: Validation failed. FORBIDDEN to proceed.",structured:{violation:`VALIDATION_FAILURE: ${a.errorsText(p.errors)}`,testId:"N/A",penalty:"$1000"},suggestions:[{type:"action",content:"Fix validation errors and retry. NO EXCEPTIONS.",severity:"HIGH"}]}]});s("=== Tool-called input validated successfully: ==="),s(JSON.stringify(t,null,2)),R.toolValidated(),l.start("evaluation",{uid:i});let d=await he.evaluate(t);return l.end("evaluation",{uid:i,decision:d.decision}),R.complete(),s("=== Evaluation completed: ==="),s(JSON.stringify(d,null,2)),l.end("tool-call-handler",{uid:i,result:"success"}),{content:[{type:"text",text:JSON.stringify(d,null,2)}]}}catch(a){l.end("evaluation",{uid:i,error:a.message}),l.end("tool-call-handler",{uid:i,error:a.message}),R.fail(a.message),s("=== ERROR in tool handler ==="),s(v(a));let p;return a instanceof b?p=a.toEvaluationResult():p={decision:"CRITIQUE",confidence:.1,feedbacks:[{text:"SYSTEM ERROR: Validation failed. FORBIDDEN to proceed.",structured:{violation:`VALIDATION_FAILURE: ${a.message||"Unknown error"}`,testId:"N/A",penalty:"$1000"},suggestions:[{type:"action",content:"Fix validation errors and retry. NO EXCEPTIONS.",severity:"HIGH"}]}],metadata:{evaluationTime:Date.now(),evaluatorVersion:G}},R.completeAfterFailure(),{content:[{type:"text",text:JSON.stringify(p,null,2)}]}}}}catch(n){l.end("tool-call-handler",{uid:i,error:n.message}),R.fail(n.message),R.completeAfterFailure(),s("FATAL ERROR!!! Failed to initialize tool:"),s(v(n))}throw R.fail(`Forbidden tool: ${e}`),R.completeAfterFailure(),new Error(`FORBIDDEN TOOL: ${e}`)});var ut=c(async(o,e)=>{he=new fe(e),await we.connect(o),s(`Evaluator-Optimizer MCP Server v${G} running on stdio`)},"start");import ts from"arg";var dt=c(o=>{let e={"--start":{description:"Start with test number n (skip tests 1 to n-1). Must be \u2265 1.",context:["cli"],argDisplay:"--start n"},"--only":{description:"Run only test number n (if integer) or testId (if string). Cannot be used with --start or --ignore.",context:["cli"],argDisplay:"--only n|testId"},"--ignore":{description:"Ignore test with index n (if number) or testId (if string). Can be used multiple times.",context:["cli"],continuation:"Cannot be used with --only.",argDisplay:"--ignore n|id"},"--parallel":{description:"Set maximum parallel instances (default: auto-calculated). Must be \u2265 1.",context:["cli","server"],argDisplay:"--parallel n"},"--keep-alive":{description:"Keep process alive after evaluation (don't exit). Default: false.",context:["cli"],argDisplay:"--keep-alive"},"--fail-fast":{description:"Enable/disable fail-fast mode. Accepts: 'true', 'false', '1', '0'. Default: true.",context:["cli","server"],continuation:"When false, continues all tasks even if one fails.",argDisplay:"--fail-fast arg"},"--manual-filter":{description:"Show test selection UI in dashboard before running tests. Default: false.",context:["cli","server"],argDisplay:"--manual-filter"},"--test-timeout":{description:"Set test execution timeout in seconds. Default: 300 seconds (5 minutes).",context:["cli","server"],argDisplay:"--test-timeout n"},"--api-url":{description:'Override the API base URL. Default: "http://0.0.0.0:8000"',context:["cli","server"],argDisplay:"--api-url url"},"--output":{description:"Save evaluation results to JSON file instead of console output",context:["cli"],argDisplay:"--output filename.json"},"--help":{description:"Show this help message",context:["cli","server"],argDisplay:"--help"},"--no-headless":{description:"Show browser windows during QA automation (for debugging). Default: false.",context:["cli"],argDisplay:"--no-headless"},"--thinking-budget":{description:"Set thinking budget for evaluation processing. Accepts any integer (including 0 and -1).",context:["cli","server"],argDisplay:"--thinking-budget n"},"--viewport":{description:"Set browser viewport size in WIDTHxHEIGHT format (e.g., 1920x1080). Default: system natural viewport.",context:["cli"],argDisplay:"--viewport WIDTHxHEIGHT"},"--analyze-hover-impact":{description:"Perform visual analysis of hover effects (takes screenshots, slower but more detailed).",context:["cli"],argDisplay:"--analyze-hover-impact"}},t=["\u2022 --start and --only cannot be used together","\u2022 --ignore cannot be used with --only","\u2022 All numeric parameters must be positive integers (\u2265 1)"];return{arguments:Object.entries(e).filter(([i,n])=>n.context.includes(o)).map(([i,n])=>({arg:i,argDisplay:n.argDisplay,description:n.description,continuation:n.continuation})),parameterRestrictions:o==="cli"?t:[]}},"getArgumentDescriptions"),pt=c(o=>{let e=ts({"--start":Number,"--only":String,"--parallel":Number,"--test-timeout":Number,"--thinking-budget":Number,"--api-url":String,"--output":String,"--fail-fast":String,"--viewport":String,"--keep-alive":Boolean,"--help":Boolean,"--manual-filter":Boolean,"--no-headless":Boolean,"--analyze-hover-impact":Boolean,"--ignore":[String]},{argv:o,permissive:!1}),t={_:e._,"api-url":"http://0.0.0.0:8000","fail-fast":!0,"keep-alive":!1,"manual-filter":!1,"no-headless":!1,"analyze-hover-impact":!1,"test-timeout":300};if(typeof e["--start"]<"u"){let r=e["--start"];if(isNaN(r)||r<1)throw new Error("--start parameter must be a positive number (1 or greater)");t.start=r,s(`Will start with test ${t.start} (skip tests 1-${t.start-1}) `)}if(typeof e["--only"]<"u"){let r=e["--only"];s("[parseCommandLineArgs] ========== Parsing --only parameter =========="),s(`[parseCommandLineArgs] Raw --only value: "${r}"`),s(`[parseCommandLineArgs] Type of --only value: ${typeof r}`);let i=parseInt(r,10);if(s(`[parseCommandLineArgs] Parsed numeric value: ${i}`),s(`[parseCommandLineArgs] Is numeric: ${!isNaN(i)}`),s(`[parseCommandLineArgs] Is positive: ${i>0}`),s(`[parseCommandLineArgs] String representation matches: ${i.toString()===r}`),!isNaN(i)&&i>0&&i.toString()===r)t.only=i,t.onlyIndex=i,s(`[parseCommandLineArgs] \u2705 Parsed --only as numeric index: ${t.only}`),s(`[parseCommandLineArgs] result.onlyIndex = ${t.onlyIndex}`);else if(r.trim().length>0)t.only=r,t.onlyTestId=r,s(`[parseCommandLineArgs] \u2705 Parsed --only as string testId: "${t.only}"`),s(`[parseCommandLineArgs] result.onlyTestId = "${t.onlyTestId}"`);else throw new Error("--only parameter must be a positive number (1 or greater) or a non-empty testId string");s("[parseCommandLineArgs] ========== End --only parameter parsing ==========")}else s("[parseCommandLineArgs] No --only parameter provided");if(typeof e["--parallel"]<"u"){let r=e["--parallel"];if(isNaN(r)||r<1)throw new Error("--parallel parameter must be a positive number (1 or greater)");t.parallel=r,s(`--parallel: Will run up to ${t.parallel} instances`)}if(typeof e["--test-timeout"]<"u"){let r=e["--test-timeout"];if(isNaN(r)||r<1)throw new Error("--test-timeout parameter must be a positive number (1 or greater)");t["test-timeout"]=r}if(s(`--test-timeout: Will use timeout of ${t["test-timeout"]} seconds`),e["--api-url"]&&(t["api-url"]=e["--api-url"]),s(`--api-url: Will use API base URL "${t["api-url"]}"`),e["--output"]&&(t.output=e["--output"],s(`--output: Will save results to JSON file "${t.output}"`)),typeof e["--keep-alive"]<"u"&&(t["keep-alive"]=e["--keep-alive"]),s(`--keep-alive: Will set keep alive to ${t["keep-alive"]}`),typeof e["--help"]<"u"&&(t.help=e["--help"]),typeof e["--manual-filter"]<"u"&&(t["manual-filter"]=e["--manual-filter"]),s(`--manual-filter: Manual filter mode: ${t["manual-filter"]?"enabled":"disabled"}`),typeof e["--no-headless"]<"u"&&(t["no-headless"]=e["--no-headless"]),s(`--no-headless: Browser visibility mode: ${t["no-headless"]?"enabled (browsers visible)":"disabled (headless)"}`),typeof e["--analyze-hover-impact"]<"u"&&(t["analyze-hover-impact"]=e["--analyze-hover-impact"]),s(`--analyze-hover-impact: Visual hover analysis: ${t["analyze-hover-impact"]?"enabled":"disabled"}`),typeof e["--thinking-budget"]<"u"){let r=e["--thinking-budget"];if(isNaN(r))throw new Error("--thinking-budget parameter must be a valid number");t["thinking-budget"]=r,s(`--thinking-budget: Will use thinking budget of ${t["thinking-budget"]}`)}if(typeof e["--viewport"]<"u"){let r=e["--viewport"];s("[parseCommandLineArgs] ========== Parsing --viewport parameter =========="),s(`[parseCommandLineArgs] Raw --viewport value: "${r}"`);let i=r.match(/^(\d+)x(\d+)$/);if(!i)throw new Error("--viewport parameter must be in format WIDTHxHEIGHT (e.g., 1920x1080)");let n=parseInt(i[1],10),a=parseInt(i[2],10);if(n<100||n>4e3)throw new Error("--viewport width must be between 100 and 4000 pixels");if(a<100||a>4e3)throw new Error("--viewport height must be between 100 and 4000 pixels");t.viewport={width:n,height:a},s(`Will use viewport size: ${n}x${a}`)}if(e["--ignore"]){let r=e["--ignore"],i=[],n=[];for(let a of r){let p=parseInt(a,10);!isNaN(p)&&p>0?i.push(p):n.push(a)}t.ignoreIndices=i,s(`Will ignore test indices: ${t.ignoreIndices.join(", ")}`),t.ignoreStrings=n,s(`Will ignore test IDs: ${t.ignoreStrings.join(", ")}`)}if(typeof e["--fail-fast"]<"u"){let r=e["--fail-fast"];if(r==="false"||r==="0")t["fail-fast"]=!1;else if(r==="true"||r==="1")t["fail-fast"]=!0;else throw new Error("Invalid value for --fail-fast: must be 'true', 'false', '1', or '0'")}if(s(`Fail-fast mode: ${t["fail-fast"]?"enabled":"disabled"}`),t.start!==void 0&&t.only!==void 0)throw new Error("--start and --only parameters cannot be used together");if(t.only!==void 0&&(t.ignoreIndices?.length||t.ignoreStrings?.length))throw new Error("--ignore parameters cannot be used with --only");return t},"parseCommandLineArgs");function rs(){console.log(`
Usage: mcp-evaluator-optimizer [options]

MCP Server for evaluating and optimizing MCP server implementations.

Server Options:`),dt("server").arguments.forEach(({argDisplay:o,description:e,continuation:t})=>{console.log(`  ${o.padEnd(18)} ${e}`),t&&console.log(`                     ${t}`)}),console.log(`

Note: This is the MCP server. For CLI evaluation tool, use:
  node dist/cli --help
`)}c(rs,"showServerHelp");var is=c(async()=>{let o=pt(process.argv.slice(2));o.help&&(rs(),process.exit(0));let e=new ss;await ut(e,o)},"start");is().catch(async o=>{s("Server error:",o),await z.cleanup(),process.exit(1)});export{v as stringifyError};
